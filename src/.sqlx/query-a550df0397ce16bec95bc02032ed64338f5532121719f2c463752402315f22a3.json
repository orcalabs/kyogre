{
  "db_name": "PostgreSQL",
  "query": "\nWITH\n    vessels AS (\n        SELECT\n            fiskeridir_vessel_id\n        FROM\n            orgs__fiskeridir_vessels\n        WHERE\n            org_id = $1\n    ),\n    measurements AS (\n        SELECT\n            v.fiskeridir_vessel_id,\n            SUM(\n                COMPUTE_TS_RANGE_PERCENT_OVERLAP (r.fuel_range, $2) * r.fuel_used\n            ) AS fuel_used,\n            RANGE_AGG(r.fuel_range) AS fuel_ranges\n        FROM\n            vessels v\n            INNER JOIN fuel_measurement_ranges r ON v.fiskeridir_vessel_id = r.fiskeridir_vessel_id\n            AND r.fuel_range && $2\n            AND COMPUTE_TS_RANGE_PERCENT_OVERLAP (r.fuel_range, $2) >= 0.5\n        GROUP BY\n            v.fiskeridir_vessel_id\n    ),\n    overlapping AS (\n        SELECT\n            v.fiskeridir_vessel_id,\n            SUM(\n                CASE\n                    WHEN m.fuel_ranges IS NULL THEN f.estimate\n                    ELSE (\n                        1.0 - COMPUTE_TS_RANGE_MUTLIRANGE_PERCENT_OVERLAP (f.day_range, m.fuel_ranges)\n                    ) * f.estimate\n                END\n            ) AS fuel\n        FROM\n            vessels v\n            INNER JOIN fuel_estimates f ON v.fiskeridir_vessel_id = f.fiskeridir_vessel_id\n            AND f.day_range <@ $2\n            LEFT JOIN measurements m ON m.fuel_ranges && f.day_range\n            AND m.fiskeridir_vessel_id = f.fiskeridir_vessel_id\n        GROUP BY\n            v.fiskeridir_vessel_id\n    )\nSELECT\n    q.fiskeridir_vessel_id AS \"fiskeridir_vessel_id!: FiskeridirVesselId\",\n    COALESCE(SUM(q.fuel), 0.0) AS \"estimated_fuel!\"\nFROM\n    (\n        SELECT\n            fiskeridir_vessel_id,\n            fuel\n        FROM\n            overlapping\n        UNION ALL\n        SELECT\n            fiskeridir_vessel_id,\n            fuel_used AS fuel\n        FROM\n            measurements\n    ) q\nGROUP BY\n    q.fiskeridir_vessel_id\n                    ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "fiskeridir_vessel_id!: FiskeridirVesselId",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "estimated_fuel!",
        "type_info": "Float8"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "TstzRange"
      ]
    },
    "nullable": [
      null,
      null
    ]
  },
  "hash": "a550df0397ce16bec95bc02032ed64338f5532121719f2c463752402315f22a3"
}
