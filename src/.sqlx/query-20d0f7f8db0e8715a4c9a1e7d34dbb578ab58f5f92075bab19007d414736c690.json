{
  "db_name": "PostgreSQL",
  "query": "\nWITH\n    everything AS (\n        SELECT\n            t.trip_id,\n            t.fiskeridir_vessel_id AS t_fiskeridir_vessel_id,\n            t.period AS trip_period,\n            t.trip_assembler_id AS t_trip_assembler_id,\n            t.period_precision,\n            fv.fiskeridir_length_group_id,\n            t.landing_coverage,\n            t.trip_assembler_id,\n            t.start_port_id,\n            t.end_port_id,\n            l.landing_timestamp,\n            l.delivery_point_id,\n            l.gear_id AS landing_gear_id,\n            l.gear_group_id AS landing_gear_group_id,\n            le.species_group_id AS landing_species_group_id,\n            l.landing_id,\n            le.living_weight,\n            le.gross_weight,\n            le.product_weight,\n            l.product_quality_id,\n            le.species_fiskeridir_id,\n            v.vessel_event_id AS v_vessel_event_id,\n            v.fiskeridir_vessel_id AS v_fiskeridir_vessel_id,\n            v.report_timestamp,\n            v.occurence_timestamp,\n            v.vessel_event_type_id AS v_vessel_event_type_id,\n            h.*,\n            f.tool_id,\n            f.barentswatch_vessel_id,\n            f.fiskeridir_vessel_id AS f_fiskeridir_vessel_id,\n            f.vessel_name AS f_vessel_name,\n            f.call_sign AS f_call_sign,\n            f.mmsi,\n            f.imo,\n            f.reg_num,\n            f.sbr_reg_num,\n            f.contact_phone,\n            f.contact_email,\n            f.tool_type,\n            f.tool_type_name,\n            f.tool_color,\n            f.tool_count,\n            f.setup_timestamp,\n            f.setup_processed_timestamp,\n            f.removed_timestamp,\n            f.removed_processed_timestamp,\n            f.last_changed,\n            f.source,\n            f.comment,\n            ST_ASTEXT (f.geometry_wkt) AS geometry,\n            f.api_source\n        FROM\n            trips t\n            INNER JOIN fiskeridir_vessels fv ON fv.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n            LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n            LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n            LEFT JOIN landing_entries le ON l.landing_id = le.landing_id\n            LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n            LEFT JOIN fishing_facilities f ON f.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n            AND f.period && t.period\n        WHERE\n            t.trip_id = ANY ($1::BIGINT[])\n    )\nINSERT INTO\n    trips_detailed (\n        trip_id,\n        fiskeridir_vessel_id,\n        fiskeridir_length_group_id,\n        \"period\",\n        landing_coverage,\n        period_precision,\n        trip_assembler_id,\n        most_recent_landing,\n        start_port_id,\n        end_port_id,\n        delivery_point_ids,\n        landing_gear_ids,\n        landing_gear_group_ids,\n        landing_species_group_ids,\n        vessel_events,\n        fishing_facilities,\n        landings,\n        landing_ids,\n        hauls\n    )\nSELECT\n    *\nFROM\n    (\n        SELECT\n            e.trip_id,\n            MAX(e.t_fiskeridir_vessel_id) AS fiskeridir_vessel_id,\n            MAX(e.fiskeridir_length_group_id) AS fiskeridir_length_group_id,\n            (ARRAY_AGG(e.trip_period)) [1] AS \"period\",\n            (ARRAY_AGG(e.landing_coverage)) [1] AS landing_coverage,\n            (ARRAY_AGG(e.period_precision)) [1] AS period_precision,\n            MAX(e.t_trip_assembler_id) AS trip_assembler_id,\n            MAX(e.landing_timestamp) AS most_recent_landing,\n            MAX(e.start_port_id) AS start_port_id,\n            MAX(e.end_port_id) AS end_port_id,\n            ARRAY_AGG(DISTINCT e.delivery_point_id) FILTER (\n                WHERE\n                    e.delivery_point_id IS NOT NULL\n            ) AS delivery_point_ids,\n            ARRAY_AGG(DISTINCT e.landing_gear_id) FILTER (\n                WHERE\n                    e.landing_gear_id IS NOT NULL\n            ) AS landing_gear_ids,\n            ARRAY_AGG(DISTINCT e.landing_gear_group_id) FILTER (\n                WHERE\n                    e.landing_gear_group_id IS NOT NULL\n            ) AS landing_gear_group_ids,\n            ARRAY_AGG(DISTINCT e.landing_species_group_id) FILTER (\n                WHERE\n                    e.landing_species_group_id IS NOT NULL\n            ) AS landing_species_group_ids,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'vessel_event_id',\n                        e.v_vessel_event_id,\n                        'fiskeridir_vessel_id',\n                        e.v_fiskeridir_vessel_id,\n                        'report_timestamp',\n                        e.report_timestamp,\n                        'occurence_timestamp',\n                        e.occurence_timestamp,\n                        'vessel_event_type_id',\n                        e.v_vessel_event_type_id\n                    )\n                ) FILTER (\n                    WHERE\n                        e.v_vessel_event_id IS NOT NULL\n                ),\n                '[]'\n            ) AS vessel_events,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'tool_id',\n                        e.tool_id,\n                        'barentswatch_vessel_id',\n                        e.barentswatch_vessel_id,\n                        'fiskeridir_vessel_id',\n                        e.f_fiskeridir_vessel_id,\n                        'vessel_name',\n                        e.f_vessel_name,\n                        'call_sign',\n                        e.f_call_sign,\n                        'mmsi',\n                        e.mmsi,\n                        'imo',\n                        e.imo,\n                        'reg_num',\n                        e.reg_num,\n                        'sbr_reg_num',\n                        e.sbr_reg_num,\n                        'contact_phone',\n                        e.contact_phone,\n                        'contact_email',\n                        e.contact_email,\n                        'tool_type',\n                        e.tool_type,\n                        'tool_type_name',\n                        e.tool_type_name,\n                        'tool_color',\n                        e.tool_color,\n                        'tool_count',\n                        e.tool_count,\n                        'setup_timestamp',\n                        e.setup_timestamp,\n                        'setup_processed_timestamp',\n                        e.setup_processed_timestamp,\n                        'removed_timestamp',\n                        e.removed_timestamp,\n                        'removed_processed_timestamp',\n                        e.removed_processed_timestamp,\n                        'last_changed',\n                        e.last_changed,\n                        'source',\n                        e.source,\n                        'comment',\n                        e.comment,\n                        'geometry_wkt',\n                        e.geometry,\n                        'api_source',\n                        e.api_source\n                    )\n                ) FILTER (\n                    WHERE\n                        e.tool_id IS NOT NULL\n                ),\n                '[]'\n            ) AS fishing_facilities,\n            (\n                ARRAY_AGG(DISTINCT landings.catches) FILTER (\n                    WHERE\n                        landings.catches IS NOT NULL\n                )\n            ) [1] AS landings,\n            ARRAY_AGG(DISTINCT e.landing_id) FILTER (\n                WHERE\n                    e.landing_id IS NOT NULL\n            ) AS landing_ids,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'haul_id',\n                        e.haul_id,\n                        'ers_activity_id',\n                        e.ers_activity_id,\n                        'duration',\n                        e.duration,\n                        'haul_distance',\n                        e.haul_distance,\n                        'catch_location_start',\n                        e.catch_location_start,\n                        'catch_locations',\n                        e.catch_locations,\n                        'ocean_depth_end',\n                        e.ocean_depth_end,\n                        'ocean_depth_start',\n                        e.ocean_depth_start,\n                        'quota_type_id',\n                        e.quota_type_id,\n                        'start_latitude',\n                        e.start_latitude,\n                        'start_longitude',\n                        e.start_longitude,\n                        'start_timestamp',\n                        LOWER(e.period),\n                        'stop_timestamp',\n                        UPPER(e.period),\n                        'stop_latitude',\n                        e.stop_latitude,\n                        'stop_longitude',\n                        e.stop_longitude,\n                        'gear_group_id',\n                        e.gear_group_id,\n                        'gear_id',\n                        e.gear_id,\n                        'fiskeridir_vessel_id',\n                        e.fiskeridir_vessel_id,\n                        'vessel_call_sign',\n                        e.vessel_call_sign,\n                        'vessel_call_sign_ers',\n                        e.vessel_call_sign_ers,\n                        'vessel_length',\n                        e.vessel_length,\n                        'vessel_length_group',\n                        e.vessel_length_group,\n                        'vessel_name',\n                        e.vessel_name,\n                        'vessel_name_ers',\n                        e.vessel_name_ers,\n                        'total_living_weight',\n                        e.total_living_weight,\n                        'catches',\n                        e.catches,\n                        'whale_catches',\n                        e.whale_catches\n                    )\n                ) FILTER (\n                    WHERE\n                        e.haul_id IS NOT NULL\n                )\n            ) AS hauls\n        FROM\n            everything e\n            LEFT JOIN (\n                SELECT\n                    qi.trip_id,\n                    COALESCE(\n                        JSONB_AGG(qi.catches) FILTER (\n                            WHERE\n                                qi.catches IS NOT NULL\n                        ),\n                        '[]'\n                    ) AS catches\n                FROM\n                    (\n                        SELECT\n                            e.trip_id,\n                            JSONB_BUILD_OBJECT(\n                                'living_weight',\n                                COALESCE(SUM(e.living_weight), 0),\n                                'gross_weight',\n                                COALESCE(SUM(e.gross_weight), 0),\n                                'product_weight',\n                                COALESCE(SUM(e.product_weight), 0),\n                                'species_fiskeridir_id',\n                                e.species_fiskeridir_id,\n                                'product_quality_id',\n                                e.product_quality_id\n                            ) AS catches\n                        FROM\n                            everything e\n                        WHERE\n                            e.product_quality_id IS NOT NULL\n                            AND e.species_fiskeridir_id IS NOT NULL\n                        GROUP BY\n                            e.trip_id,\n                            e.product_quality_id,\n                            e.species_fiskeridir_id\n                    ) qi\n                GROUP BY\n                    qi.trip_id\n            ) landings ON e.trip_id = landings.trip_id\n        GROUP BY\n            e.trip_id\n    ) q\nON CONFLICT (trip_id) DO\nUPDATE\nSET\n    trip_id = excluded.trip_id,\n    fiskeridir_vessel_id = excluded.fiskeridir_vessel_id,\n    fiskeridir_length_group_id = excluded.fiskeridir_length_group_id,\n    \"period\" = excluded.\"period\",\n    landing_coverage = excluded.landing_coverage,\n    period_precision = excluded.period_precision,\n    trip_assembler_id = excluded.trip_assembler_id,\n    most_recent_landing = excluded.most_recent_landing,\n    start_port_id = excluded.start_port_id,\n    end_port_id = excluded.end_port_id,\n    delivery_point_ids = excluded.delivery_point_ids,\n    landing_gear_ids = excluded.landing_gear_ids,\n    landing_gear_group_ids = excluded.landing_gear_group_ids,\n    landing_species_group_ids = excluded.landing_species_group_ids,\n    vessel_events = excluded.vessel_events,\n    fishing_facilities = excluded.fishing_facilities,\n    landings = excluded.landings,\n    landing_ids = excluded.landing_ids,\n    hauls = excluded.hauls;\n                ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8Array"
      ]
    },
    "nullable": []
  },
  "hash": "20d0f7f8db0e8715a4c9a1e7d34dbb578ab58f5f92075bab19007d414736c690"
}
