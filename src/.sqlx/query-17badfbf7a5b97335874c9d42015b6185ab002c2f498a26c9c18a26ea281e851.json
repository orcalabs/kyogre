{
  "db_name": "PostgreSQL",
  "query": "\nINSERT INTO\n    trips_detailed (\n        trip_id,\n        distance,\n        fiskeridir_vessel_id,\n        fiskeridir_length_group_id,\n        \"period\",\n        landing_coverage,\n        period_precision,\n        trip_assembler_id,\n        most_recent_landing,\n        start_port_id,\n        end_port_id,\n        track_coverage,\n        delivery_point_ids,\n        landing_gear_ids,\n        landing_gear_group_ids,\n        vessel_events,\n        landing_ids,\n        hauls,\n        haul_total_weight,\n        haul_duration,\n        fuel_consumption,\n        haul_ids\n    )\nSELECT\n    t.trip_id,\n    t.distance,\n    t.fiskeridir_vessel_id AS fiskeridir_vessel_id,\n    MAX(fv.fiskeridir_length_group_id) AS fiskeridir_length_group_id,\n    t.period AS \"period\",\n    t.landing_coverage,\n    t.period_precision,\n    t.trip_assembler_id,\n    MAX(l.landing_timestamp) AS most_recent_landing,\n    t.start_port_id,\n    t.end_port_id,\n    t.track_coverage,\n    ARRAY_AGG(\n        DISTINCT l.delivery_point_id\n        ORDER BY\n            l.delivery_point_id\n    ) FILTER (\n        WHERE\n            l.delivery_point_id IS NOT NULL\n    ) AS delivery_point_ids,\n    ARRAY_AGG(\n        DISTINCT l.gear_id\n        ORDER BY\n            l.gear_id\n    ) FILTER (\n        WHERE\n            l.gear_id IS NOT NULL\n    ) AS landing_gear_ids,\n    ARRAY_AGG(\n        DISTINCT l.gear_group_id\n        ORDER BY\n            l.gear_group_id\n    ) FILTER (\n        WHERE\n            l.gear_group_id IS NOT NULL\n    ) AS landing_gear_group_ids,\n    COALESCE(\n        JSONB_AGG(\n            JSONB_BUILD_OBJECT(\n                'vessel_event_id',\n                v.vessel_event_id,\n                'fiskeridir_vessel_id',\n                v.fiskeridir_vessel_id,\n                'report_timestamp',\n                v.report_timestamp,\n                'occurence_timestamp',\n                v.occurence_timestamp,\n                'vessel_event_type_id',\n                v.vessel_event_type_id\n            )\n            ORDER BY\n                v.report_timestamp,\n                v.vessel_event_type_id\n        ) FILTER (\n            WHERE\n                v.vessel_event_id IS NOT NULL\n        ),\n        '[]'\n    ) AS vessel_events,\n    COALESCE(\n        ARRAY_AGG(\n            l.landing_id\n            ORDER BY\n                l.landing_id\n        ) FILTER (\n            WHERE\n                l.landing_id IS NOT NULL\n        ),\n        '{}'\n    ) AS landing_ids,\n    COALESCE(\n        JSONB_AGG(\n            JSONB_BUILD_OBJECT(\n                'haul_id',\n                h.haul_id,\n                'cache_version',\n                h.cache_version,\n                'catch_locations',\n                h.catch_locations,\n                'gear_group_id',\n                h.gear_group_id,\n                'gear_id',\n                h.gear_id,\n                'species_group_ids',\n                h.species_group_ids,\n                'fiskeridir_vessel_id',\n                h.fiskeridir_vessel_id,\n                'haul_distance',\n                h.haul_distance,\n                'start_latitude',\n                h.start_latitude,\n                'start_longitude',\n                h.start_longitude,\n                'stop_latitude',\n                h.stop_latitude,\n                'stop_longitude',\n                h.stop_longitude,\n                'start_timestamp',\n                LOWER(h.period),\n                'stop_timestamp',\n                UPPER(h.period),\n                'vessel_length_group',\n                h.vessel_length_group,\n                'catches',\n                h.catches,\n                'vessel_name',\n                COALESCE(h.vessel_name, h.vessel_name_ers),\n                'call_sign',\n                COALESCE(h.vessel_call_sign, h.vessel_call_sign_ers)\n            )\n            ORDER BY\n                h.start_timestamp\n        ) FILTER (\n            WHERE\n                h.haul_id IS NOT NULL\n        )\n    ) AS hauls,\n    SUM(h.total_living_weight),\n    SUM((h.stop_timestamp - h.start_timestamp)),\n    MAX(b.output) AS fuel_consumption,\n    COALESCE(\n        ARRAY_AGG(\n            h.haul_id\n            ORDER BY\n                h.haul_id\n        ) FILTER (\n            WHERE\n                h.haul_id IS NOT NULL\n        ),\n        '{}'\n    ) AS haul_ids\nFROM\n    trips t\n    INNER JOIN fiskeridir_vessels fv ON fv.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n    LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n    LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n    LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n    LEFT JOIN trip_benchmark_outputs b ON t.trip_id = b.trip_id\n    AND b.trip_benchmark_id = $1\nWHERE\n    t.trip_id = ANY ($2::BIGINT[])\nGROUP BY\n    t.trip_id\nON CONFLICT (trip_id) DO\nUPDATE\nSET\n    trip_id = excluded.trip_id,\n    distance = excluded.distance,\n    fiskeridir_vessel_id = excluded.fiskeridir_vessel_id,\n    fiskeridir_length_group_id = excluded.fiskeridir_length_group_id,\n    \"period\" = excluded.\"period\",\n    landing_coverage = excluded.landing_coverage,\n    period_precision = excluded.period_precision,\n    trip_assembler_id = excluded.trip_assembler_id,\n    most_recent_landing = excluded.most_recent_landing,\n    start_port_id = excluded.start_port_id,\n    end_port_id = excluded.end_port_id,\n    delivery_point_ids = excluded.delivery_point_ids,\n    landing_gear_ids = excluded.landing_gear_ids,\n    landing_gear_group_ids = excluded.landing_gear_group_ids,\n    vessel_events = excluded.vessel_events,\n    fishing_facilities = excluded.fishing_facilities,\n    landing_ids = excluded.landing_ids,\n    hauls = excluded.hauls,\n    haul_total_weight = excluded.haul_total_weight,\n    haul_duration = excluded.haul_duration,\n    fuel_consumption = excluded.fuel_consumption,\n    haul_ids = excluded.haul_ids\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int4",
        "Int8Array"
      ]
    },
    "nullable": []
  },
  "hash": "17badfbf7a5b97335874c9d42015b6185ab002c2f498a26c9c18a26ea281e851"
}
