{
  "db_name": "PostgreSQL",
  "query": "\nINSERT INTO\n    ers_tra_reloads (\n        message_id,\n        vessel_event_id,\n        vessel_event_type_id,\n        message_timestamp,\n        reloading_timestamp,\n        latitude,\n        longitude,\n        fiskeridir_vessel_id,\n        reload_to,\n        reload_from,\n        reload_to_call_sign,\n        reload_from_call_sign,\n        catches\n    )\nSELECT\n    e.message_id,\n    e.vessel_event_id,\n    CASE\n        WHEN e.vessel_event_id IS NULL THEN NULL\n        ELSE $2::INT\n    END,\n    e.message_timestamp,\n    e.reloading_timestamp,\n    e.start_latitude,\n    e.start_longitude,\n    e.fiskeridir_vessel_id,\n    MAX(v.fiskeridir_vessel_id),\n    MAX(v2.fiskeridir_vessel_id),\n    e.reload_to_vessel_call_sign,\n    e.reload_from_vessel_call_sign,\n    COALESCE(\n        JSONB_AGG(\n            JSONB_BUILD_OBJECT(\n                'living_weight',\n                COALESCE(c.living_weight, 0.0),\n                'species_group_id',\n                c.species_group_id,\n                'catch_quantum',\n                c.ers_quantum_type_id\n            )\n        ) FILTER (\n            WHERE\n                c.message_id IS NOT NULL\n        ),\n        '[]'\n    )\nFROM\n    UNNEST($1::BIGINT[]) u (message_id)\n    INNER JOIN ers_tra e ON u.message_id = e.message_id\n    INNER JOIN ers_tra_catches c ON c.message_id = e.message_id\n    --! TODO: implement scheme to set this post insert to handle changes in active_vessels\n    LEFT JOIN active_vessels v ON v.call_sign = e.reload_to_vessel_call_sign\n    LEFT JOIN active_vessels v2 ON v2.call_sign = e.reload_from_vessel_call_sign\nGROUP BY\n    e.message_id\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8Array",
        "Int4"
      ]
    },
    "nullable": []
  },
  "hash": "9ea69f249c1c8fdb7cf60e5ca8df5978df24ce3f31ab2a77f298ed38c7b562b3"
}
