{
  "db_name": "PostgreSQL",
  "query": "\nWITH\n    trip_por_message_number AS (\n        SELECT\n            fiskeridir_vessel_id,\n            arrival_timestamp AS occurence_timestamp,\n            relevant_year,\n            message_number\n        FROM\n            ers_arrivals\n        WHERE\n            fiskeridir_vessel_id = $1::bigint\n            AND arrival_timestamp = $2::TIMESTAMPTZ\n        ORDER BY\n            relevant_year,\n            message_number\n        LIMIT\n            1\n    )\nSELECT\n    vessel_event_id AS \"vessel_event_id!\",\n    fiskeridir_vessel_id AS \"fiskeridir_vessel_id!: FiskeridirVesselId\",\n    report_timestamp AS \"report_timestamp!\",\n    vessel_event_type_id AS \"vessel_event_type_id!: VesselEventType\",\n    port_id,\n    NULL AS \"arrival_port_id\",\n    NULL AS \"departure_port_id\",\n    estimated_timestamp\nFROM\n    (\n        SELECT\n            v.vessel_event_id,\n            v.fiskeridir_vessel_id,\n            v.report_timestamp,\n            v.vessel_event_type_id,\n            d.port_id,\n            d.relevant_year,\n            d.message_number,\n            d.departure_timestamp AS estimated_timestamp\n        FROM\n            vessel_events v\n            INNER JOIN ers_departures d ON d.vessel_event_id = v.vessel_event_id\n            INNER JOIN trip_por_message_number t ON t.fiskeridir_vessel_id = d.fiskeridir_vessel_id\n            AND (\n                d.departure_timestamp > t.occurence_timestamp\n                OR (\n                    d.relevant_year > t.relevant_year\n                    OR (\n                        d.relevant_year = t.relevant_year\n                        AND d.message_number > t.message_number\n                    )\n                )\n            )\n        WHERE\n            v.fiskeridir_vessel_id = $1::BIGINT\n            AND v.occurence_timestamp >= $2::TIMESTAMPTZ\n        UNION\n        SELECT\n            v.vessel_event_id,\n            v.fiskeridir_vessel_id,\n            v.report_timestamp,\n            v.vessel_event_type_id,\n            a.port_id,\n            a.relevant_year,\n            a.message_number,\n            a.arrival_timestamp AS estimated_timestamp\n        FROM\n            vessel_events v\n            INNER JOIN ers_arrivals a ON a.vessel_event_id = v.vessel_event_id\n            INNER JOIN trip_por_message_number t ON t.fiskeridir_vessel_id = a.fiskeridir_vessel_id\n            AND (\n                a.arrival_timestamp > t.occurence_timestamp\n                OR (\n                    a.relevant_year > t.relevant_year\n                    OR (\n                        a.relevant_year = t.relevant_year\n                        AND a.message_number > t.message_number\n                    )\n                )\n            )\n        WHERE\n            v.fiskeridir_vessel_id = $1::BIGINT\n            AND v.occurence_timestamp >= $2::TIMESTAMPTZ\n    ) q\nORDER BY\n    estimated_timestamp,\n    relevant_year,\n    message_number\n           ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "vessel_event_id!",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "fiskeridir_vessel_id!: FiskeridirVesselId",
        "type_info": "Int4"
      },
      {
        "ordinal": 2,
        "name": "report_timestamp!",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 3,
        "name": "vessel_event_type_id!: VesselEventType",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "port_id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 5,
        "name": "arrival_port_id",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "departure_port_id",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "estimated_timestamp",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Timestamptz"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "17c2080587bc9e607eb6488365b7c205bbbbceede2e92f8f009949eb509dd9ad"
}
