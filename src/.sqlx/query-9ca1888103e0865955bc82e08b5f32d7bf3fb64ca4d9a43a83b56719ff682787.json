{
  "db_name": "PostgreSQL",
  "query": "\nWITH\n    target_trips AS (\n        SELECT\n            t.trip_id,\n            le.*\n        FROM\n            trips t\n            INNER JOIN vessel_events v ON t.trip_id = v.trip_id\n            INNER JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n            INNER JOIN landing_entries le ON le.landing_id = l.landing_id\n        WHERE\n            t.trip_id = ANY ($1::BIGINT[])\n            AND le.product_quality_id IS NOT NULL\n            AND le.species_fiskeridir_id IS NOT NULL\n    ),\n    trips_with_largest_species_group_quantum AS (\n        SELECT DISTINCT\n            ON (trip_id) trip_id,\n            species_group_id AS landing_largest_quantum_species_group_id\n        FROM\n            (\n                SELECT\n                    trip_id,\n                    species_group_id,\n                    SUM(living_weight) AS living_weight\n                FROM\n                    target_trips\n                GROUP BY\n                    trip_id,\n                    species_group_id\n            ) q\n        ORDER BY\n            trip_id,\n            living_weight DESC\n    )\nUPDATE trips_detailed\nSET\n    landings = COALESCE(q.landings, '[]'),\n    landing_species_group_ids = COALESCE(q.landing_species_group_ids, '{}'),\n    landing_total_living_weight = COALESCE(q.living_weight, 0),\n    landing_total_gross_weight = COALESCE(q.gross_weight, 0),\n    landing_total_product_weight = COALESCE(q.product_weight, 0),\n    landing_total_price_for_fisher = COALESCE(q.final_price_for_fisher, 0),\n    price_for_fisher_is_estimated = COALESCE(q.price_for_fisher_is_estimated, FALSE),\n    landing_largest_quantum_species_group_id = tq.landing_largest_quantum_species_group_id\nFROM\n    trips_with_largest_species_group_quantum tq\n    INNER JOIN (\n        SELECT\n            qi.trip_id,\n            COALESCE(\n                JSONB_AGG(qi.catches) FILTER (\n                    WHERE\n                        qi.catches IS NOT NULL\n                ),\n                '[]'\n            ) AS landings,\n            ARRAY(\n                SELECT DISTINCT\n                    UNNEST(ARRAY_AGG(qi.species_group_ids))\n            ) AS landing_species_group_ids,\n            SUM(qi.living_weight) AS living_weight,\n            SUM(qi.gross_weight) AS gross_weight,\n            SUM(qi.product_weight) AS product_weight,\n            SUM(qi.final_price_for_fisher) AS final_price_for_fisher,\n            BOOL_OR(qi.price_for_fisher_is_estimated) AS price_for_fisher_is_estimated\n        FROM\n            (\n                SELECT\n                    t.trip_id,\n                    ARRAY_AGG(DISTINCT t.species_group_id) FILTER (\n                        WHERE\n                            t.species_group_id IS NOT NULL\n                    ) AS species_group_ids,\n                    JSONB_BUILD_OBJECT(\n                        'living_weight',\n                        COALESCE(SUM(t.living_weight), 0),\n                        'gross_weight',\n                        COALESCE(SUM(t.gross_weight), 0),\n                        'product_weight',\n                        COALESCE(SUM(t.product_weight), 0),\n                        'price_for_fisher',\n                        COALESCE(SUM(t.final_price_for_fisher), 0),\n                        'species_fiskeridir_id',\n                        t.species_fiskeridir_id,\n                        'product_quality_id',\n                        t.product_quality_id\n                    ) AS catches,\n                    SUM(t.living_weight) AS living_weight,\n                    SUM(t.gross_weight) AS gross_weight,\n                    SUM(t.product_weight) AS product_weight,\n                    SUM(t.final_price_for_fisher) AS final_price_for_fisher,\n                    BOOL_OR(\n                        t.price_for_fisher IS NULL\n                        AND t.final_price_for_fisher IS NOT NULL\n                    ) AS price_for_fisher_is_estimated\n                FROM\n                    target_trips t\n                GROUP BY\n                    t.trip_id,\n                    t.product_quality_id,\n                    t.species_fiskeridir_id\n            ) qi\n        GROUP BY\n            qi.trip_id\n    ) q ON tq.trip_id = q.trip_id\nWHERE\n    trips_detailed.trip_id = tq.trip_id\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8Array"
      ]
    },
    "nullable": []
  },
  "hash": "9ca1888103e0865955bc82e08b5f32d7bf3fb64ca4d9a43a83b56719ff682787"
}
