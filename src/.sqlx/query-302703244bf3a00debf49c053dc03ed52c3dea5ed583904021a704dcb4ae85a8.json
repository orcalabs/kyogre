{
  "db_name": "PostgreSQL",
  "query": "\nSELECT\n    latitude AS \"latitude!\",\n    longitude AS \"longitude!\",\n    \"timestamp\" AS \"timestamp!\",\n    course_over_ground,\n    speed,\n    navigational_status AS \"navigational_status: NavigationStatus\",\n    rate_of_turn,\n    true_heading,\n    distance_to_shore AS \"distance_to_shore!\",\n    position_type_id AS \"position_type!: PositionType\",\n    NULL AS \"pruned_by: TripPositionLayerId\",\n    NULL as \"trip_cumulative_fuel_consumption!: Option<f64>\"\nFROM\n    (\n        SELECT\n            latitude,\n            longitude,\n            \"timestamp\",\n            course_over_ground,\n            speed_over_ground AS speed,\n            navigation_status_id AS navigational_status,\n            rate_of_turn,\n            true_heading,\n            distance_to_shore,\n            $9::INT AS position_type_id\n        FROM\n            ais_positions a\n        WHERE\n            $1::INT IS NOT NULL\n            AND mmsi = $1\n            AND $1 IN (\n                SELECT\n                    a.mmsi\n                FROM\n                    ais_vessels a\n                    LEFT JOIN fiskeridir_vessels f ON a.call_sign = f.call_sign\n                WHERE\n                    a.mmsi = $1\n                    AND (\n                        a.ship_type IS NOT NULL\n                        AND NOT (a.ship_type = ANY ($5::INT[]))\n                        OR COALESCE(f.length, a.ship_length) > $6\n                    )\n                    AND (\n                        CASE\n                            WHEN $7 = 0 THEN TRUE\n                            WHEN $7 = 1 THEN COALESCE(f.length, a.ship_length) >= $8\n                        END\n                    )\n            )\n        UNION ALL\n        SELECT\n            latitude,\n            longitude,\n            \"timestamp\",\n            course AS course_over_ground,\n            speed,\n            NULL AS navigational_status,\n            NULL AS rate_of_turn,\n            NULL AS true_heading,\n            distance_to_shore,\n            $10::INT AS position_type_id\n        FROM\n            vms_positions v\n        WHERE\n            $2::TEXT IS NOT NULL\n            AND call_sign = $2\n    ) q\nWHERE\n    \"timestamp\" BETWEEN $3 AND $4\nORDER BY\n    \"timestamp\" ASC\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "latitude!",
        "type_info": "Float8"
      },
      {
        "ordinal": 1,
        "name": "longitude!",
        "type_info": "Float8"
      },
      {
        "ordinal": 2,
        "name": "timestamp!",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 3,
        "name": "course_over_ground",
        "type_info": "Float8"
      },
      {
        "ordinal": 4,
        "name": "speed",
        "type_info": "Float8"
      },
      {
        "ordinal": 5,
        "name": "navigational_status: NavigationStatus",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "rate_of_turn",
        "type_info": "Float8"
      },
      {
        "ordinal": 7,
        "name": "true_heading",
        "type_info": "Int4"
      },
      {
        "ordinal": 8,
        "name": "distance_to_shore!",
        "type_info": "Float8"
      },
      {
        "ordinal": 9,
        "name": "position_type!: PositionType",
        "type_info": "Int4"
      },
      {
        "ordinal": 10,
        "name": "pruned_by: TripPositionLayerId",
        "type_info": "Text"
      },
      {
        "ordinal": 11,
        "name": "trip_cumulative_fuel_consumption!: Option<f64>",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Text",
        "Timestamptz",
        "Timestamptz",
        "Int4Array",
        "Float8",
        "Int4",
        "Float8",
        "Int4",
        "Int4"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "302703244bf3a00debf49c053dc03ed52c3dea5ed583904021a704dcb4ae85a8"
}
