{
  "db_name": "PostgreSQL",
  "query": "\nWITH\n    sums AS (\n        SELECT DISTINCT\n            ON (hm.species_group_id, h.start_timestamp::DATE) h.start_timestamp::DATE AS \"date\",\n            hm.species_group_id,\n            cl.longitude::DECIMAL AS longitude,\n            cl.latitude::DECIMAL AS latitude,\n            cl.catch_location_id,\n            SUM(hm.living_weight) OVER (\n                PARTITION BY\n                    (\n                        hm.species_group_id,\n                        h.start_timestamp::DATE,\n                        cl.catch_location_id\n                    )\n            ) AS weight\n        FROM\n            hauls h\n            INNER JOIN hauls_matrix hm ON h.haul_id = hm.haul_id\n            INNER JOIN catch_locations cl ON cl.catch_location_id = hm.catch_location\n            LEFT JOIN ml_hauls_training_log m ON h.haul_id = m.haul_id\n            AND hm.species_group_id = m.species_group_id\n            AND hm.catch_location = m.catch_location_id\n            AND m.ml_model_id = $1\n        WHERE\n            (h.stop_timestamp - h.start_timestamp) < INTERVAL '2 day'\n            AND h.gear_group_id = $2\n            AND m.haul_id IS NULL\n            AND cl.hauls_polygon_overlap = TRUE\n            AND hm.species_group_id = $3\n        ORDER BY\n            hm.species_group_id,\n            h.start_timestamp::DATE,\n            weight DESC\n    )\nSELECT\n    sums.longitude AS \"longitude!\",\n    sums.latitude AS \"latitude!\",\n    hm.catch_location,\n    h.start_timestamp::DATE AS \"date!\",\n    hm.species_group_id AS \"species: SpeciesGroup\",\n    h.haul_id\nFROM\n    hauls_matrix hm\n    INNER JOIN hauls h ON hm.haul_id = h.haul_id\n    INNER JOIN catch_locations cl ON cl.catch_location_id = hm.catch_location\n    INNER JOIN sums ON sums.species_group_id = hm.species_group_id\n    AND sums.\"date\" = h.start_timestamp::DATE\n    AND sums.weight > $4\n    LEFT JOIN ml_hauls_training_log m ON m.ml_model_id = $1\n    AND hm.haul_id = m.haul_id\n    AND hm.species_group_id = m.species_group_id\n    AND hm.catch_location = m.catch_location_id\n    AND cl.hauls_polygon_overlap = TRUE\nWHERE\n    (h.stop_timestamp - h.start_timestamp) < INTERVAL '2 day'\n    AND hm.gear_group_id = $2\n    AND m.haul_id IS NULL\n    AND hm.species_group_id = $3\nORDER BY\n    h.start_timestamp\nLIMIT\n    $5\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "longitude!",
        "type_info": "Numeric"
      },
      {
        "ordinal": 1,
        "name": "latitude!",
        "type_info": "Numeric"
      },
      {
        "ordinal": 2,
        "name": "catch_location",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "date!",
        "type_info": "Date"
      },
      {
        "ordinal": 4,
        "name": "species: SpeciesGroup",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "haul_id",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Int4",
        "Int4",
        "Float8",
        "Int8"
      ]
    },
    "nullable": [
      null,
      null,
      false,
      null,
      false,
      false
    ]
  },
  "hash": "9eb3a6d9b12a7e625ff6722d5b591b38246564cf0aad4b2b7780936f0b4b737f"
}
