{
  "db_name": "PostgreSQL",
  "query": "\nSELECT\n    l.landing_id AS \"landing_id!: LandingId\",\n    MAX(e.trip_id) AS \"trip_id: TripId\",\n    l.landing_timestamp,\n    l.catch_area_id,\n    l.catch_main_area_id,\n    l.gear_id AS \"gear_id!: Gear\",\n    l.gear_group_id AS \"gear_group_id!: GearGroup\",\n    COALESCE(MIN(d.new_delivery_point_id), l.delivery_point_id) AS \"delivery_point_id: DeliveryPointId\",\n    l.fiskeridir_vessel_id AS \"fiskeridir_vessel_id?: FiskeridirVesselId\",\n    l.vessel_call_sign AS \"vessel_call_sign: CallSign\",\n    l.vessel_name,\n    l.vessel_length,\n    l.vessel_length_group_id AS \"vessel_length_group!: VesselLengthGroup\",\n    COALESCE(SUM(le.gross_weight), 0) AS \"total_gross_weight!\",\n    COALESCE(SUM(le.living_weight), 0) AS \"total_living_weight!\",\n    COALESCE(SUM(le.product_weight), 0) AS \"total_product_weight!\",\n    JSONB_AGG(\n        JSONB_BUILD_OBJECT(\n            'living_weight',\n            COALESCE(le.living_weight, 0),\n            'gross_weight',\n            COALESCE(le.gross_weight, 0),\n            'product_weight',\n            le.product_weight,\n            'species_fiskeridir_id',\n            le.species_fiskeridir_id,\n            'species_group_id',\n            le.species_group_id\n        )\n    )::TEXT AS \"catches!\",\n    \"version\"\nFROM\n    landings l\n    INNER JOIN landing_entries le ON l.landing_id = le.landing_id\n    LEFT JOIN deprecated_delivery_points d ON l.delivery_point_id = d.old_delivery_point_id\n    LEFT JOIN vessel_events e ON l.vessel_event_id = e.vessel_event_id\nWHERE\n    (\n        $1::tstzrange[] IS NULL\n        OR l.landing_timestamp <@ ANY ($1::tstzrange[])\n    )\n    AND (\n        $2::INT[] IS NULL\n        OR l.catch_area_id = ANY ($2::INT[])\n    )\n    AND (\n        $3::INT[] IS NULL\n        OR l.catch_main_area_id = ANY ($3::INT[])\n    )\n    AND (\n        $4::INT[] IS NULL\n        OR l.gear_group_id = ANY ($4)\n    )\n    AND (\n        $5::INT[] IS NULL\n        OR l.vessel_length_group_id = ANY ($5)\n    )\n    AND (\n        $6::BIGINT[] IS NULL\n        OR l.fiskeridir_vessel_id = ANY ($6)\n    )\n    AND (\n        $7::TIMESTAMPTZ IS NULL\n        OR l.landing_timestamp >= $7\n    )\n    AND (\n        $8::TIMESTAMPTZ IS NULL\n        OR l.landing_timestamp <= $8\n    )\nGROUP BY\n    l.landing_id\nHAVING\n    (\n        $9::INT[] IS NULL\n        OR ARRAY_AGG(le.species_group_id) && $9\n    )\nORDER BY\n    CASE\n        WHEN $10 = 1\n        AND $11 = 1 THEN l.landing_timestamp\n    END ASC,\n    CASE\n        WHEN $10 = 1\n        AND $11 = 2 THEN SUM(le.living_weight)\n    END ASC,\n    CASE\n        WHEN $10 = 2\n        AND $11 = 1 THEN l.landing_timestamp\n    END DESC,\n    CASE\n        WHEN $10 = 2\n        AND $11 = 2 THEN SUM(le.living_weight)\n    END DESC\nOFFSET\n    $12\nLIMIT\n    $13\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "landing_id!: LandingId",
        "type_info": "Varchar"
      },
      {
        "ordinal": 1,
        "name": "trip_id: TripId",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "landing_timestamp",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 3,
        "name": "catch_area_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "catch_main_area_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "gear_id!: Gear",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "gear_group_id!: GearGroup",
        "type_info": "Int4"
      },
      {
        "ordinal": 7,
        "name": "delivery_point_id: DeliveryPointId",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "fiskeridir_vessel_id?: FiskeridirVesselId",
        "type_info": "Int8"
      },
      {
        "ordinal": 9,
        "name": "vessel_call_sign: CallSign",
        "type_info": "Varchar"
      },
      {
        "ordinal": 10,
        "name": "vessel_name",
        "type_info": "Varchar"
      },
      {
        "ordinal": 11,
        "name": "vessel_length",
        "type_info": "Float8"
      },
      {
        "ordinal": 12,
        "name": "vessel_length_group!: VesselLengthGroup",
        "type_info": "Int4"
      },
      {
        "ordinal": 13,
        "name": "total_gross_weight!",
        "type_info": "Float8"
      },
      {
        "ordinal": 14,
        "name": "total_living_weight!",
        "type_info": "Float8"
      },
      {
        "ordinal": 15,
        "name": "total_product_weight!",
        "type_info": "Float8"
      },
      {
        "ordinal": 16,
        "name": "catches!",
        "type_info": "Text"
      },
      {
        "ordinal": 17,
        "name": "version",
        "type_info": "Int4"
      }
    ],
    "parameters": {
      "Left": [
        "TstzRangeArray",
        "Int4Array",
        "Int4Array",
        "Int4Array",
        "Int4Array",
        "Int8Array",
        "Timestamptz",
        "Timestamptz",
        "Int4Array",
        "Int4",
        "Int4",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      null,
      false,
      true,
      true,
      false,
      false,
      null,
      true,
      true,
      true,
      true,
      false,
      null,
      null,
      null,
      null,
      false
    ]
  },
  "hash": "29620e409733dc0191eb144a869d3db46cd9744f9a668d7bf22b3e15db7d7667"
}
