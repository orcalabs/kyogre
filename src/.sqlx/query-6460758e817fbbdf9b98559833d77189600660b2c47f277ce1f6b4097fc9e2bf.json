{
  "db_name": "PostgreSQL",
  "query": "\nSELECT\n    f.preferred_trip_assembler AS \"preferred_trip_assembler!: TripAssemblerId\",\n    f.fiskeridir_vessel_id AS \"fiskeridir_vessel_id!: FiskeridirVesselId\",\n    f.fiskeridir_length_group_id AS \"fiskeridir_length_group_id!: VesselLengthGroup\",\n    MAX(v.call_sign) AS \"fiskeridir_call_sign: CallSign\",\n    f.\"name\" AS fiskeridir_name,\n    f.registration_id AS fiskeridir_registration_id,\n    f.\"length\" AS fiskeridir_length,\n    f.\"width\" AS fiskeridir_width,\n    f.owners::TEXT AS \"fiskeridir_owners!\",\n    f.engine_building_year_final AS fiskeridir_engine_building_year,\n    f.engine_power_final AS fiskeridir_engine_power,\n    f.building_year AS fiskeridir_building_year,\n    f.auxiliary_engine_power AS fiskeridir_auxiliary_engine_power,\n    f.auxiliary_engine_building_year AS fiskeridir_auxiliary_engine_building_year,\n    f.engine_version AS fiskeridir_engine_version,\n    f.boiler_engine_power AS fiskeridir_boiler_engine_power,\n    f.boiler_engine_building_year AS fiskeridir_boiler_engine_building_year,\n    f.engine_type_manual AS \"fiskeridir_engine_type: EngineType\",\n    f.engine_rpm_manual AS \"fiskeridir_engine_rpm\",\n    f.service_speed AS fiskeridir_service_speed,\n    f.degree_of_electrification AS fiskeridir_degree_of_electrification,\n    f.gear_group_ids AS \"gear_group_ids!: Vec<GearGroup>\",\n    f.species_group_ids AS \"species_group_ids!: Vec<SpeciesGroup>\",\n    a.mmsi AS \"ais_mmsi?: Mmsi\",\n    a.call_sign AS \"ais_call_sign: CallSign\",\n    a.name AS ais_name,\n    a.draught AS \"ais_draught: Draught\",\n    a.ship_length AS ais_length,\n    a.ship_width AS ais_width,\n    MAX(c.departure_timestamp) AS current_trip_departure_timestamp,\n    MAX(c.target_species_fiskeridir_id) AS current_trip_target_species_fiskeridir_id,\n    BOOL_OR(v.is_active) AS \"is_active!\"\nFROM\n    all_vessels AS v\n    INNER JOIN fiskeridir_vessels AS f ON v.fiskeridir_vessel_id = f.fiskeridir_vessel_id\n    LEFT JOIN ais_vessels AS a ON v.mmsi = a.mmsi\n    LEFT JOIN current_trips AS c ON v.fiskeridir_vessel_id = c.fiskeridir_vessel_id\nWHERE\n    (\n        SELECT\n            COUNT(*)\n        FROM\n            trips_detailed t\n        WHERE\n            t.fiskeridir_vessel_id = v.fiskeridir_vessel_id\n            AND t.has_track > $1\n    ) >= $2\nGROUP BY\n    f.fiskeridir_vessel_id,\n    a.mmsi\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "preferred_trip_assembler!: TripAssemblerId",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "fiskeridir_vessel_id!: FiskeridirVesselId",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "fiskeridir_length_group_id!: VesselLengthGroup",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "fiskeridir_call_sign: CallSign",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "fiskeridir_name",
        "type_info": "Varchar"
      },
      {
        "ordinal": 5,
        "name": "fiskeridir_registration_id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 6,
        "name": "fiskeridir_length",
        "type_info": "Float8"
      },
      {
        "ordinal": 7,
        "name": "fiskeridir_width",
        "type_info": "Float8"
      },
      {
        "ordinal": 8,
        "name": "fiskeridir_owners!",
        "type_info": "Text"
      },
      {
        "ordinal": 9,
        "name": "fiskeridir_engine_building_year",
        "type_info": "Int4"
      },
      {
        "ordinal": 10,
        "name": "fiskeridir_engine_power",
        "type_info": "Int4"
      },
      {
        "ordinal": 11,
        "name": "fiskeridir_building_year",
        "type_info": "Int4"
      },
      {
        "ordinal": 12,
        "name": "fiskeridir_auxiliary_engine_power",
        "type_info": "Int4"
      },
      {
        "ordinal": 13,
        "name": "fiskeridir_auxiliary_engine_building_year",
        "type_info": "Int4"
      },
      {
        "ordinal": 14,
        "name": "fiskeridir_engine_version",
        "type_info": "Int4"
      },
      {
        "ordinal": 15,
        "name": "fiskeridir_boiler_engine_power",
        "type_info": "Int4"
      },
      {
        "ordinal": 16,
        "name": "fiskeridir_boiler_engine_building_year",
        "type_info": "Int4"
      },
      {
        "ordinal": 17,
        "name": "fiskeridir_engine_type: EngineType",
        "type_info": "Int4"
      },
      {
        "ordinal": 18,
        "name": "fiskeridir_engine_rpm",
        "type_info": "Int4"
      },
      {
        "ordinal": 19,
        "name": "fiskeridir_service_speed",
        "type_info": "Float8"
      },
      {
        "ordinal": 20,
        "name": "fiskeridir_degree_of_electrification",
        "type_info": "Float8"
      },
      {
        "ordinal": 21,
        "name": "gear_group_ids!: Vec<GearGroup>",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 22,
        "name": "species_group_ids!: Vec<SpeciesGroup>",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 23,
        "name": "ais_mmsi?: Mmsi",
        "type_info": "Int4"
      },
      {
        "ordinal": 24,
        "name": "ais_call_sign: CallSign",
        "type_info": "Varchar"
      },
      {
        "ordinal": 25,
        "name": "ais_name",
        "type_info": "Varchar"
      },
      {
        "ordinal": 26,
        "name": "ais_draught: Draught",
        "type_info": "Float8"
      },
      {
        "ordinal": 27,
        "name": "ais_length",
        "type_info": "Int4"
      },
      {
        "ordinal": 28,
        "name": "ais_width",
        "type_info": "Int4"
      },
      {
        "ordinal": 29,
        "name": "current_trip_departure_timestamp",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 30,
        "name": "current_trip_target_species_fiskeridir_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 31,
        "name": "is_active!",
        "type_info": "Bool"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null,
      true,
      true,
      true,
      true,
      null,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      null,
      null,
      null
    ]
  },
  "hash": "6460758e817fbbdf9b98559833d77189600660b2c47f277ce1f6b4097fc9e2bf"
}
