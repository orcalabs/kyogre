{
  "db_name": "PostgreSQL",
  "query": "\nINSERT INTO\n    hauls_matrix (\n        haul_id,\n        catch_location_matrix_index,\n        catch_location,\n        matrix_month_bucket,\n        vessel_length_group,\n        fiskeridir_vessel_id,\n        gear_group_id,\n        species_group_id,\n        living_weight,\n        haul_distribution_status\n    )\nSELECT\n    h.haul_id,\n    l.matrix_index,\n    l.catch_location_id,\n    HAULS_MATRIX_MONTH_BUCKET (h.start_timestamp),\n    TO_VESSEL_LENGTH_GROUP (h.vessel_length) AS vessel_length_group,\n    h.fiskeridir_vessel_id,\n    MIN(b.gear_group_id),\n    b.species_group_id,\n    COALESCE(SUM(b.living_weight) * MIN(u.factor), 0),\n    MIN(u.haul_distribution_status)\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::TEXT[],\n        $3::DOUBLE PRECISION[],\n        $4::INT[]\n    ) u (\n        haul_id,\n        catch_location,\n        factor,\n        haul_distribution_status\n    )\n    INNER JOIN hauls h ON h.haul_id = u.haul_id\n    INNER JOIN ers_dca_bodies b ON h.message_id = b.message_id\n    AND h.start_timestamp = b.start_timestamp\n    AND h.stop_timestamp = b.stop_timestamp\n    AND h.start_latitude = b.start_latitude\n    AND h.start_longitude = b.start_longitude\n    AND h.stop_latitude = b.stop_latitude\n    AND h.stop_longitude = b.stop_longitude\n    AND h.duration = b.duration\n    AND h.haul_distance IS NOT DISTINCT FROM b.haul_distance\n    AND h.gear_id = b.gear_id\n    INNER JOIN catch_locations l ON u.catch_location = l.catch_location_id\nGROUP BY\n    h.haul_id,\n    b.species_group_id,\n    l.catch_location_id;\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8Array",
        "TextArray",
        "Float8Array",
        "Int4Array"
      ]
    },
    "nullable": []
  },
  "hash": "e7ead984c79d6aecb2354e4ad217c8fa58cc2833cc2f61d0d40c7914b44e362c"
}
