{
  "db_name": "PostgreSQL",
  "query": "\nINSERT INTO\n    trips_detailed (\n        trip_id,\n        distance,\n        fiskeridir_vessel_id,\n        fiskeridir_length_group_id,\n        \"period\",\n        landing_coverage,\n        period_precision,\n        trip_assembler_id,\n        most_recent_landing,\n        start_port_id,\n        end_port_id,\n        delivery_point_ids,\n        landing_gear_ids,\n        landing_gear_group_ids,\n        vessel_events,\n        fishing_facilities,\n        landing_ids,\n        hauls\n    )\nSELECT\n    t.trip_id,\n    t.distance,\n    t.fiskeridir_vessel_id AS fiskeridir_vessel_id,\n    MAX(fv.fiskeridir_length_group_id) AS fiskeridir_length_group_id,\n    t.period AS \"period\",\n    t.landing_coverage,\n    t.period_precision,\n    t.trip_assembler_id,\n    MAX(l.landing_timestamp) AS most_recent_landing,\n    t.start_port_id,\n    t.end_port_id,\n    ARRAY_AGG(DISTINCT l.delivery_point_id) FILTER (\n        WHERE\n            l.delivery_point_id IS NOT NULL\n    ) AS delivery_point_ids,\n    ARRAY_AGG(DISTINCT l.gear_id) FILTER (\n        WHERE\n            l.gear_id IS NOT NULL\n    ) AS landing_gear_ids,\n    ARRAY_AGG(DISTINCT l.gear_group_id) FILTER (\n        WHERE\n            l.gear_group_id IS NOT NULL\n    ) AS landing_gear_group_ids,\n    COALESCE(\n        JSONB_AGG(\n            DISTINCT JSONB_BUILD_OBJECT(\n                'vessel_event_id',\n                v.vessel_event_id,\n                'fiskeridir_vessel_id',\n                v.fiskeridir_vessel_id,\n                'report_timestamp',\n                v.report_timestamp,\n                'occurence_timestamp',\n                v.occurence_timestamp,\n                'vessel_event_type_id',\n                v.vessel_event_type_id\n            )\n        ) FILTER (\n            WHERE\n                v.vessel_event_id IS NOT NULL\n        ),\n        '[]'\n    ) AS vessel_events,\n    COALESCE(\n        JSONB_AGG(\n            DISTINCT JSONB_BUILD_OBJECT(\n                'tool_id',\n                f.tool_id,\n                'barentswatch_vessel_id',\n                f.barentswatch_vessel_id,\n                'fiskeridir_vessel_id',\n                f.fiskeridir_vessel_id,\n                'vessel_name',\n                f.vessel_name,\n                'call_sign',\n                f.call_sign,\n                'mmsi',\n                f.mmsi,\n                'imo',\n                f.imo,\n                'reg_num',\n                f.reg_num,\n                'sbr_reg_num',\n                f.sbr_reg_num,\n                'contact_phone',\n                f.contact_phone,\n                'contact_email',\n                f.contact_email,\n                'tool_type',\n                f.tool_type,\n                'tool_type_name',\n                f.tool_type_name,\n                'tool_color',\n                f.tool_color,\n                'tool_count',\n                f.tool_count,\n                'setup_timestamp',\n                f.setup_timestamp,\n                'setup_processed_timestamp',\n                f.setup_processed_timestamp,\n                'removed_timestamp',\n                f.removed_timestamp,\n                'removed_processed_timestamp',\n                f.removed_processed_timestamp,\n                'last_changed',\n                f.last_changed,\n                'source',\n                f.source,\n                'comment',\n                f.comment,\n                'geometry_wkt',\n                ST_ASTEXT (f.geometry_wkt),\n                'api_source',\n                f.api_source\n            )\n        ) FILTER (\n            WHERE\n                f.tool_id IS NOT NULL\n        ),\n        '[]'\n    ) AS fishing_facilities,\n    ARRAY_AGG(DISTINCT l.landing_id) FILTER (\n        WHERE\n            l.landing_id IS NOT NULL\n    ) AS landing_ids,\n    COALESCE(\n        JSONB_AGG(\n            DISTINCT JSONB_BUILD_OBJECT(\n                'haul_id',\n                h.haul_id,\n                'ers_activity_id',\n                h.ers_activity_id,\n                'duration',\n                h.duration,\n                'haul_distance',\n                h.haul_distance,\n                'start_latitude',\n                h.start_latitude,\n                'start_longitude',\n                h.start_longitude,\n                'start_timestamp',\n                LOWER(h.period),\n                'stop_timestamp',\n                UPPER(h.period),\n                'stop_latitude',\n                h.stop_latitude,\n                'stop_longitude',\n                h.stop_longitude,\n                'gear_group_id',\n                h.gear_group_id,\n                'gear_id',\n                h.gear_id,\n                'fiskeridir_vessel_id',\n                h.fiskeridir_vessel_id,\n                'total_living_weight',\n                h.total_living_weight,\n                'catches',\n                h.catches,\n                'whale_catches',\n                h.whale_catches\n            )\n        ) FILTER (\n            WHERE\n                h.haul_id IS NOT NULL\n        )\n    ) AS hauls\nFROM\n    trips t\n    INNER JOIN fiskeridir_vessels fv ON fv.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n    LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n    LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n    LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n    LEFT JOIN fishing_facilities f ON f.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n    AND f.period && t.period\nWHERE\n    t.trip_id = ANY ($1::BIGINT[])\nGROUP BY\n    t.trip_id\nON CONFLICT (trip_id) DO\nUPDATE\nSET\n    trip_id = excluded.trip_id,\n    distance = excluded.distance,\n    fiskeridir_vessel_id = excluded.fiskeridir_vessel_id,\n    fiskeridir_length_group_id = excluded.fiskeridir_length_group_id,\n    \"period\" = excluded.\"period\",\n    landing_coverage = excluded.landing_coverage,\n    period_precision = excluded.period_precision,\n    trip_assembler_id = excluded.trip_assembler_id,\n    most_recent_landing = excluded.most_recent_landing,\n    start_port_id = excluded.start_port_id,\n    end_port_id = excluded.end_port_id,\n    delivery_point_ids = excluded.delivery_point_ids,\n    landing_gear_ids = excluded.landing_gear_ids,\n    landing_gear_group_ids = excluded.landing_gear_group_ids,\n    vessel_events = excluded.vessel_events,\n    fishing_facilities = excluded.fishing_facilities,\n    landing_ids = excluded.landing_ids,\n    hauls = excluded.hauls;\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8Array"
      ]
    },
    "nullable": []
  },
  "hash": "8781c6e7ac5903678a592e3d2aecef566c18b0742a267ade365f4266693adf2b"
}
