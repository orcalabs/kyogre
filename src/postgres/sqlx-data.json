{
  "db": "PostgreSQL",
  "063ffe3ea8b5130ce0826bfca3da92147d6472f539da0b9e2ce34f83532da96c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_departure_catches (\n        message_id,\n        ers_quantum_type_id,\n        living_weight,\n        species_fao_id,\n        species_fiskeridir_id,\n        species_group_id,\n        species_main_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::VARCHAR[],\n        $3::INT[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[]\n    )\n            "
  },
  "08a03f64df22a7c92a164d1800c3092cb6705eff86ced66c185be07dddd6332c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Varchar"
        ]
      }
    },
    "query": "\nINSERT INTO\n    data_hashes (hash, data_hash_id)\nVALUES\n    ($1, $2)\nON CONFLICT (data_hash_id) DO\nUPDATE\nSET\n    hash = excluded.hash\n            "
  },
  "094967e78df9f65d178d39fcd60785516678c268bdef18e309cea941948bc1e8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    landing_entries (\n        landing_id,\n        size_grouping_code,\n        withdrawn_catch_value,\n        catch_value,\n        sales_team_fee,\n        post_payment,\n        support_fee_for_fisher,\n        price_for_buyer,\n        price_for_fisher,\n        unit_price_for_buyer,\n        unit_price_for_fisher,\n        landing_method_id,\n        conservation_method_id,\n        product_condition_id,\n        product_purpose_id,\n        product_purpose_group_id,\n        line_number,\n        num_fish,\n        product_weight,\n        product_weight_over_quota,\n        gross_weight,\n        living_weight,\n        living_weight_over_quota,\n        species_id,\n        species_fao_id,\n        species_group_id,\n        species_fiskeridir_id,\n        species_main_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::VARCHAR[],\n        $2::VARCHAR[],\n        $3::DECIMAL[],\n        $4::DECIMAL[],\n        $5::DECIMAL[],\n        $6::DECIMAL[],\n        $7::DECIMAL[],\n        $8::DECIMAL[],\n        $9::DECIMAL[],\n        $10::DECIMAL[],\n        $11::DECIMAL[],\n        $12::INT[],\n        $13::INT[],\n        $14::INT[],\n        $15::INT[],\n        $16::INT[],\n        $17::INT[],\n        $18::INT[],\n        $19::DECIMAL[],\n        $20::DECIMAL[],\n        $21::DECIMAL[],\n        $22::DECIMAL[],\n        $23::DECIMAL[],\n        $24::INT[],\n        $25::VARCHAR[],\n        $26::INT[],\n        $27::INT[],\n        $28::INT[]\n    )\nON CONFLICT (landing_id, line_number) DO NOTHING\n                "
  },
  "0ef8600ed3dec02cfd9a260f004587fc2715180f308d47e5de8bb5ed52b87e91": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nDELETE FROM ers_tra_catches c USING ers_tra e\nWHERE\n    e.message_id = c.message_id\n    AND e.relevant_year = $1\n            "
  },
  "10868476cb4c6fc45d917632b82755729b39149c1ddb1e948cfc5d4f2555350a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "TimestamptzArray",
          "TimestamptzArray",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "DateArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_departures (\n        message_id,\n        message_number,\n        message_timestamp,\n        ers_message_type_id,\n        message_year,\n        relevant_year,\n        sequence_number,\n        ers_activity_id,\n        departure_timestamp,\n        fishing_timestamp,\n        start_latitude,\n        start_latitude_sggdd,\n        start_longitude,\n        start_longitude_sggdd,\n        target_species_fao_id,\n        target_species_fiskeridir_id,\n        port_id,\n        fiskeridir_vessel_id,\n        vessel_building_year,\n        vessel_call_sign,\n        vessel_call_sign_ers,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_county,\n        vessel_county_code,\n        vessel_greatest_length,\n        vessel_identification,\n        vessel_length,\n        vessel_length_group,\n        vessel_length_group_code,\n        vessel_material_code,\n        vessel_municipality,\n        vessel_municipality_code,\n        vessel_name,\n        vessel_name_ers,\n        vessel_nationality_code,\n        fiskeridir_vessel_nationality_group_id,\n        vessel_rebuilding_year,\n        vessel_registration_id,\n        vessel_registration_id_ers,\n        vessel_valid_until,\n        vessel_width\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::timestamptz[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::VARCHAR[],\n        $9::timestamptz[],\n        $10::timestamptz[],\n        $11::DECIMAL[],\n        $12::VARCHAR[],\n        $13::DECIMAL[],\n        $14::VARCHAR[],\n        $15::VARCHAR[],\n        $16::INT[],\n        $17::VARCHAR[],\n        $18::INT[],\n        $19::INT[],\n        $20::VARCHAR[],\n        $21::VARCHAR[],\n        $22::INT[],\n        $23::INT[],\n        $24::INT[],\n        $25::INT[],\n        $26::VARCHAR[],\n        $27::INT[],\n        $28::DECIMAL[],\n        $29::VARCHAR[],\n        $30::DECIMAL[],\n        $31::VARCHAR[],\n        $32::INT[],\n        $33::VARCHAR[],\n        $34::VARCHAR[],\n        $35::INT[],\n        $36::VARCHAR[],\n        $37::VARCHAR[],\n        $38::VARCHAR[],\n        $39::INT[],\n        $40::INT[],\n        $41::VARCHAR[],\n        $42::VARCHAR[],\n        $43::date[],\n        $44::DECIMAL[]\n    )\nON CONFLICT (message_id) DO NOTHING\n            "
  },
  "12eadc176109246c7a9bd3e46db1910a55a4c074572a1fd40f6073dcb4a97abd": {
    "describe": {
      "columns": [
        {
          "name": "catch_location_id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "polygon!: _",
          "ordinal": 1,
          "type_info": {
            "Custom": {
              "kind": "Simple",
              "name": "geometry"
            }
          }
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    catch_location_id,\n    \"polygon\" AS \"polygon!: _\"\nFROM\n    catch_locations\n            "
  },
  "13041c559dae3b4a2972bf672ab879da750bad4bd0816aab29693d19f28a422e": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\nSELECT\n    hash\nFROM\n    data_hashes\nWHERE\n    data_hash_id = $1\n            "
  },
  "16895f3516be61ac615944290b631aa5aa7faea0d78bcf3107a06857f30d003d": {
    "describe": {
      "columns": [
        {
          "name": "haul_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "ers_activity_id",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "duration",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "haul_distance",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "catch_location_start",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "catch_locations",
          "ordinal": 5,
          "type_info": "TextArray"
        },
        {
          "name": "ocean_depth_end",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "ocean_depth_start",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "quota_type_id",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "start_latitude",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "start_longitude",
          "ordinal": 10,
          "type_info": "Numeric"
        },
        {
          "name": "start_timestamp",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "stop_timestamp",
          "ordinal": 12,
          "type_info": "Timestamptz"
        },
        {
          "name": "stop_latitude",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "stop_longitude",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gear_id!: Gear",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "gear_group_id!: GearGroup",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 17,
          "type_info": "Int8"
        },
        {
          "name": "vessel_call_sign",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "vessel_call_sign_ers",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "vessel_length",
          "ordinal": 20,
          "type_info": "Numeric"
        },
        {
          "name": "vessel_length_group!: VesselLengthGroup",
          "ordinal": 21,
          "type_info": "Int4"
        },
        {
          "name": "vessel_name",
          "ordinal": 22,
          "type_info": "Text"
        },
        {
          "name": "vessel_name_ers",
          "ordinal": 23,
          "type_info": "Text"
        },
        {
          "name": "catches!",
          "ordinal": 24,
          "type_info": "Text"
        },
        {
          "name": "whale_catches!",
          "ordinal": 25,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    h.haul_id,\n    h.ers_activity_id,\n    h.duration,\n    h.haul_distance,\n    h.catch_location_start,\n    h.catch_locations,\n    h.ocean_depth_end,\n    h.ocean_depth_start,\n    h.quota_type_id,\n    h.start_latitude,\n    h.start_longitude,\n    h.start_timestamp,\n    h.stop_timestamp,\n    h.stop_latitude,\n    h.stop_longitude,\n    h.gear_id AS \"gear_id!: Gear\",\n    h.gear_group_id AS \"gear_group_id!: GearGroup\",\n    h.fiskeridir_vessel_id,\n    h.vessel_call_sign,\n    h.vessel_call_sign_ers,\n    h.vessel_length,\n    h.vessel_length_group AS \"vessel_length_group!: VesselLengthGroup\",\n    h.vessel_name,\n    h.vessel_name_ers,\n    h.catches::TEXT AS \"catches!\",\n    h.whale_catches::TEXT AS \"whale_catches!\"\nFROM\n    hauls h\nWHERE\n    h.fiskeridir_vessel_id = $1\n            "
  },
  "17ba26750637390447eff59451cac22944e074ddd110226baab43832171da407": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8Array"
        ]
      }
    },
    "query": "\nUPDATE fiskeridir_vessels\nSET\n    preferred_trip_assembler = $1\nWHERE\n    fiskeridir_vessel_id = ANY ($2::BIGINT[])\n    AND fiskeridir_vessel_id IS NOT NULL\n            "
  },
  "1b40fa70b9bc98ad6ae4df4a946bb52b5951ca278cd36396a0ddf82cea19315f": {
    "describe": {
      "columns": [
        {
          "name": "preferred_trip_assembler!: TripAssemblerId",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_vessel_id!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_type_id",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_length_group_id",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_nation_group_id",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_norwegian_municipality_id",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_norwegian_county_id",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_nation_id?",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_gross_tonnage_1969",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_gross_tonnage_other",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_call_sign",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_name",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_registration_id",
          "ordinal": 12,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_length",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "fiskeridir_width",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "fiskeridir_owner",
          "ordinal": 15,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_owners",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "fiskeridir_engine_building_year",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_engine_power",
          "ordinal": 18,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_building_year",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_rebuilding_year",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "ais_mmsi?",
          "ordinal": 21,
          "type_info": "Int4"
        },
        {
          "name": "ais_imo_number",
          "ordinal": 22,
          "type_info": "Int4"
        },
        {
          "name": "ais_call_sign",
          "ordinal": 23,
          "type_info": "Varchar"
        },
        {
          "name": "ais_name",
          "ordinal": 24,
          "type_info": "Varchar"
        },
        {
          "name": "ais_ship_length",
          "ordinal": 25,
          "type_info": "Int4"
        },
        {
          "name": "ais_ship_width",
          "ordinal": 26,
          "type_info": "Int4"
        },
        {
          "name": "ais_eta",
          "ordinal": 27,
          "type_info": "Timestamptz"
        },
        {
          "name": "ais_destination",
          "ordinal": 28,
          "type_info": "Varchar"
        },
        {
          "name": "benchmarks!",
          "ordinal": 29,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    f.preferred_trip_assembler AS \"preferred_trip_assembler!: TripAssemblerId\",\n    f.fiskeridir_vessel_id AS \"fiskeridir_vessel_id!\",\n    f.fiskeridir_vessel_type_id,\n    f.fiskeridir_length_group_id,\n    f.fiskeridir_nation_group_id,\n    f.norwegian_municipality_id AS fiskeridir_norwegian_municipality_id,\n    f.norwegian_county_id AS fiskeridir_norwegian_county_id,\n    f.nation_id AS \"fiskeridir_nation_id?\",\n    f.gross_tonnage_1969 AS fiskeridir_gross_tonnage_1969,\n    f.gross_tonnage_other AS fiskeridir_gross_tonnage_other,\n    f.call_sign AS fiskeridir_call_sign,\n    f.\"name\" AS fiskeridir_name,\n    f.registration_id AS fiskeridir_registration_id,\n    f.\"length\" AS fiskeridir_length,\n    f.\"width\" AS fiskeridir_width,\n    f.\"owner\" AS fiskeridir_owner,\n    f.owners::TEXT AS fiskeridir_owners,\n    f.engine_building_year AS fiskeridir_engine_building_year,\n    f.engine_power AS fiskeridir_engine_power,\n    f.building_year AS fiskeridir_building_year,\n    f.rebuilding_year AS fiskeridir_rebuilding_year,\n    a.mmsi AS \"ais_mmsi?\",\n    a.imo_number AS ais_imo_number,\n    a.call_sign AS ais_call_sign,\n    a.name AS ais_name,\n    a.ship_length AS ais_ship_length,\n    a.ship_width AS ais_ship_width,\n    a.eta AS ais_eta,\n    a.destination AS ais_destination,\n    COALESCE(\n        JSONB_AGG(\n            JSONB_BUILD_OBJECT(\n                'benchmark_id',\n                b.vessel_benchmark_id,\n                'value',\n                b.output\n            )\n        ) FILTER (\n            WHERE\n                b.output IS NOT NULL\n                AND b.vessel_benchmark_id IS NOT NULL\n        ),\n        '[]'::jsonb\n    )::TEXT AS \"benchmarks!\"\nFROM\n    fiskeridir_vessels AS f\n    LEFT JOIN ais_vessels AS a ON f.call_sign = a.call_sign\n    LEFT JOIN vessel_benchmark_outputs AS b ON b.fiskeridir_vessel_id = f.fiskeridir_vessel_id\nWHERE\n    f.fiskeridir_vessel_id = $1\nGROUP BY\n    f.fiskeridir_vessel_id,\n    a.mmsi\n            "
  },
  "1ec530d8f145aad047ef664764c7b7aec1058aab0896a286e76121fadd72d33d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "NumericArray",
          "TimestamptzArray",
          "NumericArray",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_positions (\n        mmsi,\n        latitude,\n        longitude,\n        course_over_ground,\n        rate_of_turn,\n        true_heading,\n        speed_over_ground,\n        TIMESTAMP,\n        distance_to_shore,\n        navigation_status_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::INT[],\n        $2::DECIMAL[],\n        $3::DECIMAL[],\n        $4::DECIMAL[],\n        $5::DECIMAL[],\n        $6::INT[],\n        $7::DECIMAL[],\n        $8::timestamptz[],\n        $9::DECIMAL[],\n        $10::INT[]\n    )\nON CONFLICT (mmsi, TIMESTAMP) DO NOTHING\n            "
  },
  "224fd2efcc5d10ac251cac4bad6200666b127269250e93689ff8589c3c741e0e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Timestamptz"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_data_migration_progress (mmsi, progress)\nVALUES\n    ($1, $2)\nON CONFLICT (mmsi) DO\nUPDATE\nSET\n    progress = excluded.progress\n            "
  },
  "2843fbd8a5058813995a29b3bb8577d22abf97975e265d17a4816c5798e2de39": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          "Int4",
          "Numeric",
          "Timestamptz",
          "Int4",
          "Numeric",
          "Varchar",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\nINSERT INTO\n    current_ais_positions (\n        mmsi,\n        latitude,\n        longitude,\n        course_over_ground,\n        rate_of_turn,\n        true_heading,\n        speed_over_ground,\n        TIMESTAMP,\n        altitude,\n        distance_to_shore,\n        ais_class,\n        ais_message_type_id,\n        navigation_status_id\n    )\nVALUES\n    (\n        $1::INT,\n        $2::DECIMAL,\n        $3::DECIMAL,\n        $4::DECIMAL,\n        $5::DECIMAL,\n        $6::INT,\n        $7::DECIMAL,\n        $8::timestamptz,\n        $9::INT,\n        $10::DECIMAL,\n        $11::VARCHAR,\n        $12::INT,\n        $13::INT\n    )\nON CONFLICT (mmsi) DO\nUPDATE\nSET\n    latitude = excluded.latitude,\n    longitude = excluded.longitude,\n    course_over_ground = excluded.course_over_ground,\n    rate_of_turn = excluded.rate_of_turn,\n    true_heading = excluded.true_heading,\n    speed_over_ground = excluded.speed_over_ground,\n    TIMESTAMP = excluded.timestamp,\n    altitude = excluded.altitude,\n    distance_to_shore = excluded.distance_to_shore,\n    ais_class = excluded.ais_class,\n    ais_message_type_id = excluded.ais_message_type_id,\n    navigation_status_id = excluded.navigation_status_id\n            "
  },
  "28d3494f2ca837c2a2651b3359769f31fb834256f8f85990c669f078f7bc7149": {
    "describe": {
      "columns": [
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    fiskeridir_vessel_id,\n    \"conflict\" AS \"timestamp\"\nFROM\n    trip_assembler_conflicts\nWHERE\n    trip_assembler_id = $1\n            "
  },
  "292d4e3afb0824bc2db6d617e947d79c5f8a5ead234e79fec59e015f4a744ab3": {
    "describe": {
      "columns": [
        {
          "name": "haul_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "ers_activity_id",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "duration",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "haul_distance",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "catch_location_start",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "catch_locations",
          "ordinal": 5,
          "type_info": "TextArray"
        },
        {
          "name": "ocean_depth_end",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "ocean_depth_start",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "quota_type_id",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "start_latitude",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "start_longitude",
          "ordinal": 10,
          "type_info": "Numeric"
        },
        {
          "name": "start_timestamp",
          "ordinal": 11,
          "type_info": "Timestamptz"
        },
        {
          "name": "stop_timestamp",
          "ordinal": 12,
          "type_info": "Timestamptz"
        },
        {
          "name": "stop_latitude",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "stop_longitude",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gear_id!: Gear",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "gear_group_id!: GearGroup",
          "ordinal": 16,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 17,
          "type_info": "Int8"
        },
        {
          "name": "vessel_call_sign",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "vessel_call_sign_ers",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "vessel_length",
          "ordinal": 20,
          "type_info": "Numeric"
        },
        {
          "name": "vessel_length_group!: VesselLengthGroup",
          "ordinal": 21,
          "type_info": "Int4"
        },
        {
          "name": "vessel_name",
          "ordinal": 22,
          "type_info": "Text"
        },
        {
          "name": "vessel_name_ers",
          "ordinal": 23,
          "type_info": "Text"
        },
        {
          "name": "catches!",
          "ordinal": 24,
          "type_info": "Text"
        },
        {
          "name": "whale_catches!",
          "ordinal": 25,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "TstzRangeArray",
          "TextArray",
          "Int4Array",
          "Int4Array",
          "NumRangeArray",
          "Int8Array"
        ]
      }
    },
    "query": "\nSELECT\n    h.haul_id,\n    h.ers_activity_id,\n    h.duration,\n    h.haul_distance,\n    h.catch_location_start,\n    h.catch_locations,\n    h.ocean_depth_end,\n    h.ocean_depth_start,\n    h.quota_type_id,\n    h.start_latitude,\n    h.start_longitude,\n    h.start_timestamp,\n    h.stop_timestamp,\n    h.stop_latitude,\n    h.stop_longitude,\n    h.gear_id AS \"gear_id!: Gear\",\n    h.gear_group_id AS \"gear_group_id!: GearGroup\",\n    h.fiskeridir_vessel_id,\n    h.vessel_call_sign,\n    h.vessel_call_sign_ers,\n    h.vessel_length,\n    h.vessel_length_group AS \"vessel_length_group!: VesselLengthGroup\",\n    h.vessel_name,\n    h.vessel_name_ers,\n    h.catches::TEXT AS \"catches!\",\n    h.whale_catches::TEXT AS \"whale_catches!\"\nFROM\n    hauls h\nWHERE\n    (\n        $1::tstzrange[] IS NULL\n        OR h.period && ANY ($1)\n    )\n    AND (\n        $2::TEXT[] IS NULL\n        OR CASE\n            WHEN catch_locations IS NULL THEN h.catch_location_start = ANY ($2)\n            ELSE h.catch_locations && $2\n        END\n    )\n    AND (\n        $3::INT[] IS NULL\n        OR h.gear_group_id = ANY ($3)\n    )\n    AND (\n        $4::INT[] IS NULL\n        OR h.species_group_ids && $4\n    )\n    AND (\n        $5::numrange[] IS NULL\n        OR h.vessel_length <@ ANY ($5)\n    )\n    AND (\n        $6::BIGINT[] IS NULL\n        OR fiskeridir_vessel_id = ANY ($6)\n    )\n            "
  },
  "2937299bd506f10ab4ce79809225a575d4c55f465dfc90b71e618467dda14394": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_tra_catches (\n        message_id,\n        ers_quantum_type_id,\n        living_weight,\n        species_fao_id,\n        species_fiskeridir_id,\n        species_group_id,\n        species_main_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::VARCHAR[],\n        $3::INT[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[]\n    )\n            "
  },
  "29a4303b750e350c31ad6038dc394a7f862acacf0d987351ebcbb1763874a671": {
    "describe": {
      "columns": [
        {
          "name": "start_port_id?",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "start_port_name",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "start_port_nationality?",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "start_port_latitude",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "start_port_longitude",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "end_port_id?",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_name",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_nationality?",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_latitude",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "end_port_longitude",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        true,
        true,
        false,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    p.port_id AS \"start_port_id?\",\n    p.name AS start_port_name,\n    p.nationality AS \"start_port_nationality?\",\n    p.latitude AS start_port_latitude,\n    p.longitude AS start_port_longitude,\n    e.end_port_id AS \"end_port_id?\",\n    e.end_port_name,\n    e.end_port_nationality AS \"end_port_nationality?\",\n    e.end_port_latitude,\n    e.end_port_longitude\nFROM\n    trips AS t\n    LEFT JOIN ports AS p ON t.start_port_id = p.port_id\n    LEFT JOIN (\n        SELECT\n            t2.trip_id,\n            p2.port_id AS end_port_id,\n            p2.name AS end_port_name,\n            p2.nationality AS end_port_nationality,\n            p2.latitude AS end_port_latitude,\n            p2.longitude AS end_port_longitude\n        FROM\n            trips AS t2\n            LEFT JOIN ports AS p2 ON t2.end_port_id = p2.port_id\n        WHERE\n            t2.trip_id = $1\n    ) AS e ON e.trip_id = t.trip_id\nWHERE\n    t.trip_id = $1\n            "
  },
  "29c411b419f2f4a111fe02906a6bf3be8cf5182894eb6ee1e24eccc81de8f35e": {
    "describe": {
      "columns": [
        {
          "name": "mmsi",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "progress",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    mmsi,\n    progress\nFROM\n    ais_data_migration_progress\nWHERE\n    progress < $1\n            "
  },
  "2b0ca051e09c57716df01b62e6f619994a4d8608a189ee1bc461f6a0b43a89d6": {
    "describe": {
      "columns": [
        {
          "name": "preferred_trip_assembler!: TripAssemblerId",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_vessel_id!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_type_id",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_length_group_id",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_nation_group_id",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_norwegian_municipality_id",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_norwegian_county_id",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_nation_id?",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_gross_tonnage_1969",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_gross_tonnage_other",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_call_sign",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_name",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_registration_id",
          "ordinal": 12,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_length",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "fiskeridir_width",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "fiskeridir_owner",
          "ordinal": 15,
          "type_info": "Varchar"
        },
        {
          "name": "fiskeridir_owners",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "fiskeridir_engine_building_year",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_engine_power",
          "ordinal": 18,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_building_year",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fiskeridir_rebuilding_year",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "ais_mmsi?",
          "ordinal": 21,
          "type_info": "Int4"
        },
        {
          "name": "ais_imo_number",
          "ordinal": 22,
          "type_info": "Int4"
        },
        {
          "name": "ais_call_sign",
          "ordinal": 23,
          "type_info": "Varchar"
        },
        {
          "name": "ais_name",
          "ordinal": 24,
          "type_info": "Varchar"
        },
        {
          "name": "ais_ship_length",
          "ordinal": 25,
          "type_info": "Int4"
        },
        {
          "name": "ais_ship_width",
          "ordinal": 26,
          "type_info": "Int4"
        },
        {
          "name": "ais_eta",
          "ordinal": 27,
          "type_info": "Timestamptz"
        },
        {
          "name": "ais_destination",
          "ordinal": 28,
          "type_info": "Varchar"
        },
        {
          "name": "benchmarks!",
          "ordinal": 29,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    f.preferred_trip_assembler AS \"preferred_trip_assembler!: TripAssemblerId\",\n    f.fiskeridir_vessel_id AS \"fiskeridir_vessel_id!\",\n    f.fiskeridir_vessel_type_id,\n    f.fiskeridir_length_group_id,\n    f.fiskeridir_nation_group_id,\n    f.norwegian_municipality_id AS fiskeridir_norwegian_municipality_id,\n    f.norwegian_county_id AS fiskeridir_norwegian_county_id,\n    f.nation_id AS \"fiskeridir_nation_id?\",\n    f.gross_tonnage_1969 AS fiskeridir_gross_tonnage_1969,\n    f.gross_tonnage_other AS fiskeridir_gross_tonnage_other,\n    f.call_sign AS fiskeridir_call_sign,\n    f.\"name\" AS fiskeridir_name,\n    f.registration_id AS fiskeridir_registration_id,\n    f.\"length\" AS fiskeridir_length,\n    f.\"width\" AS fiskeridir_width,\n    f.\"owner\" AS fiskeridir_owner,\n    f.owners::TEXT AS fiskeridir_owners,\n    f.engine_building_year AS fiskeridir_engine_building_year,\n    f.engine_power AS fiskeridir_engine_power,\n    f.building_year AS fiskeridir_building_year,\n    f.rebuilding_year AS fiskeridir_rebuilding_year,\n    a.mmsi AS \"ais_mmsi?\",\n    a.imo_number AS ais_imo_number,\n    a.call_sign AS ais_call_sign,\n    a.name AS ais_name,\n    a.ship_length AS ais_ship_length,\n    a.ship_width AS ais_ship_width,\n    a.eta AS ais_eta,\n    a.destination AS ais_destination,\n    COALESCE(\n        JSONB_AGG(\n            JSONB_BUILD_OBJECT(\n                'benchmark_id',\n                b.vessel_benchmark_id,\n                'value',\n                b.output\n            )\n        ) FILTER (\n            WHERE\n                b.output IS NOT NULL\n                AND b.vessel_benchmark_id IS NOT NULL\n        ),\n        '[]'::jsonb\n    )::TEXT AS \"benchmarks!\"\nFROM\n    fiskeridir_vessels AS f\n    LEFT JOIN ais_vessels AS a ON f.call_sign = a.call_sign\n    LEFT JOIN vessel_benchmark_outputs AS b ON b.fiskeridir_vessel_id = f.fiskeridir_vessel_id\nGROUP BY\n    f.fiskeridir_vessel_id,\n    a.mmsi\n            "
  },
  "2dd15b7e3f2309418479ed309d85ff7dc3a1e1710e41310c7093b79fd0f12b2f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_vessels (mmsi)\nVALUES\n    (UNNEST($1::INT[]))\nON CONFLICT (mmsi) DO NOTHING\n            "
  },
  "31b02dee387c64437123cb9de6d8e5d3100538adb9118d6cf71be1bc476b7a40": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    species (species_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (species_id) DO\nUPDATE\nSET\n    \"name\" = COALESCE(species.name, EXCLUDED.name)\n            "
  },
  "321c6b4d43f64362aad165a95d438936b7b671d083a9ce59a5f647e3a3424d4f": {
    "describe": {
      "columns": [
        {
          "name": "vessel_event_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_event_type_id!: VesselEventType",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "port_id",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "arrival_port_id",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "departure_port_id",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "estimated_timestamp: _",
          "ordinal": 7,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int4",
          "TstzRange"
        ]
      }
    },
    "query": "\nSELECT\n    v.vessel_event_id,\n    v.fiskeridir_vessel_id,\n    v.\"timestamp\",\n    v.vessel_event_type_id AS \"vessel_event_type_id!: VesselEventType\",\n    NULL AS \"port_id\",\n    NULL AS \"arrival_port_id\",\n    NULL AS \"departure_port_id\",\n    NULL AS \"estimated_timestamp: _\"\nFROM\n    vessel_events v\nWHERE\n    v.fiskeridir_vessel_id = $1\n    AND v.vessel_event_type_id = $2\n    AND v.\"timestamp\" <@ $3::tstzrange\nORDER BY\n    \"timestamp\"\n           "
  },
  "3a39569d2de907617d14506da3c5c15ee672765615f8d531c20bafea2af1288d": {
    "describe": {
      "columns": [
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    fiskeridir_vessel_id,\n    timer AS \"timestamp\"\nFROM\n    trip_calculation_timers\nWHERE\n    trip_assembler_id = $1\n            "
  },
  "3a8e2fc15c8f6bd1ed68d3cb1107e7f134b38c41582334f8cd31d37c54ea1bfe": {
    "describe": {
      "columns": [
        {
          "name": "duration",
          "ordinal": 0,
          "type_info": "Interval"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    SUM(UPPER(period) - LOWER(period)) AS duration\nFROM\n    trips\nWHERE\n    fiskeridir_vessel_id = $1\n            "
  },
  "3c16a137ae1003f988246fc3c056a60ac42eff85d234155b33d9facb05dbe216": {
    "describe": {
      "columns": [
        {
          "name": "tool_id",
          "ordinal": 0,
          "type_info": "Uuid"
        },
        {
          "name": "barentswatch_vessel_id",
          "ordinal": 1,
          "type_info": "Uuid"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "vessel_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "call_sign",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "mmsi",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "imo",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "reg_num",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "sbr_reg_num",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "contact_phone",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "contact_email",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "tool_type!: FishingFacilityToolType",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "tool_type_name",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "tool_color",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "tool_count",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "setup_timestamp!",
          "ordinal": 15,
          "type_info": "Timestamptz"
        },
        {
          "name": "setup_processed_timestamp",
          "ordinal": 16,
          "type_info": "Timestamptz"
        },
        {
          "name": "removed_timestamp",
          "ordinal": 17,
          "type_info": "Timestamptz"
        },
        {
          "name": "removed_processed_timestamp",
          "ordinal": 18,
          "type_info": "Timestamptz"
        },
        {
          "name": "last_changed!",
          "ordinal": 19,
          "type_info": "Timestamptz"
        },
        {
          "name": "source",
          "ordinal": 20,
          "type_info": "Text"
        },
        {
          "name": "comment",
          "ordinal": 21,
          "type_info": "Text"
        },
        {
          "name": "geometry_wkt: _",
          "ordinal": 22,
          "type_info": {
            "Custom": {
              "kind": "Simple",
              "name": "geometry"
            }
          }
        },
        {
          "name": "api_source!: FishingFacilityApiSource",
          "ordinal": 23,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4Array",
          "Int8Array",
          "Int4Array",
          "Bool",
          "TstzRangeArray",
          "TstzRangeArray",
          "Int4",
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    tool_id,\n    barentswatch_vessel_id,\n    fiskeridir_vessel_id,\n    vessel_name,\n    call_sign,\n    mmsi,\n    imo,\n    reg_num,\n    sbr_reg_num,\n    contact_phone,\n    contact_email,\n    tool_type AS \"tool_type!: FishingFacilityToolType\",\n    tool_type_name,\n    tool_color,\n    tool_count,\n    setup_timestamp AS \"setup_timestamp!\",\n    setup_processed_timestamp,\n    removed_timestamp,\n    removed_processed_timestamp,\n    last_changed AS \"last_changed!\",\n    source,\n    \"comment\",\n    geometry_wkt AS \"geometry_wkt: _\",\n    api_source AS \"api_source!: FishingFacilityApiSource\"\nFROM\n    fishing_facilities\nWHERE\n    (\n        $1::INT[] IS NULL\n        OR mmsi = ANY ($1)\n    )\n    AND (\n        $2::BIGINT[] IS NULL\n        OR fiskeridir_vessel_id = ANY ($2)\n    )\n    AND (\n        $3::INT[] IS NULL\n        OR tool_type = ANY ($3)\n    )\n    AND (\n        $4::BOOLEAN IS NULL\n        OR CASE\n            WHEN $4 THEN removed_timestamp IS NULL\n            WHEN NOT $4 THEN removed_timestamp IS NOT NULL\n        END\n    )\n    AND (\n        $5::TSTZRANGE[] IS NULL\n        OR setup_timestamp <@ ANY ($5)\n    )\n    AND (\n        $6::TSTZRANGE[] IS NULL\n        OR removed_timestamp <@ ANY ($6)\n    )\nORDER BY\n    CASE\n        WHEN $7 = 1 THEN CASE\n            WHEN $8 = 1 THEN setup_timestamp\n            WHEN $8 = 2 THEN removed_timestamp\n            WHEN $8 = 3 THEN last_changed\n        END\n    END ASC,\n    CASE\n        WHEN $7 = 2 THEN CASE\n            WHEN $8 = 1 THEN setup_timestamp\n            WHEN $8 = 2 THEN removed_timestamp\n            WHEN $8 = 3 THEN last_changed\n        END\n    END DESC\nOFFSET\n    $9\nLIMIT\n    $10\n            "
  },
  "42d280b49c134606e1875c16d0a03ff9d90a4f7a9e461203ff3c283f2ce22a58": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    norwegian_municipalities (norwegian_municipality_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (norwegian_municipality_id) DO\nUPDATE\nSET\n    NAME = excluded.name\nWHERE\n    norwegian_municipalities.name IS NULL\n    AND excluded.name IS NOT NULL\n            "
  },
  "47d0f250215c48234d76eb068c7b76971da04b5f084b11995819107b6357d980": {
    "describe": {
      "columns": [
        {
          "name": "fiskeridir_vessel_id!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Timestamptz"
        },
        {
          "name": "port_id",
          "ordinal": 2,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    fiskeridir_vessel_id AS \"fiskeridir_vessel_id!\",\n    departure_timestamp AS \"timestamp\",\n    port_id\nFROM\n    ers_departures\nWHERE\n    fiskeridir_vessel_id = $1\n    AND departure_timestamp >= GREATEST($2, '1970-01-01T00:00:00Z'::TIMESTAMPTZ)\n            "
  },
  "4bdff9def143623b7f2e7d25ae0a6a5041e35e88db4b993670c4a1e5d04f65f4": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 4,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "start_port_id",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_id",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "total_gross_weight!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "total_living_weight!",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "total_product_weight!",
          "ordinal": 10,
          "type_info": "Numeric"
        },
        {
          "name": "num_deliveries!",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "gear_ids!: Vec<Gear>",
          "ordinal": 12,
          "type_info": "Int4Array"
        },
        {
          "name": "delivery_points!",
          "ordinal": 13,
          "type_info": "VarcharArray"
        },
        {
          "name": "latest_landing_timestamp",
          "ordinal": 14,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_events!",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "hauls!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "fishing_facilities!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "catches!",
          "ordinal": 18,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nWITH\n    everything AS (\n        SELECT\n            t.trip_id AS t_trip_id,\n            t.fiskeridir_vessel_id AS t_fiskeridir_vessel_id,\n            t.period AS t_period,\n            t.period_precision AS t_period_precision,\n            t.landing_coverage AS t_landing_coverage,\n            t.trip_assembler_id AS t_trip_assembler_id,\n            t.start_port_id AS t_start_port_id,\n            t.end_port_id AS t_end_port_id,\n            v.vessel_event_id AS v_vessel_event_id,\n            v.fiskeridir_vessel_id AS v_fiskeridir_vessel_id,\n            v.timestamp AS v_timestamp,\n            v.vessel_event_type_id AS v_vessel_event_type_id,\n            l.landing_id AS l_landing_id,\n            l.landing_timestamp AS l_landing_timestamp,\n            l.gear_id AS l_gear_id,\n            l.product_quality_id AS l_product_quality_id,\n            l.delivery_point_id AS l_delivery_point_id,\n            le.gross_weight AS le_gross_weight,\n            le.living_weight AS le_living_weight,\n            le.product_weight AS le_product_weight,\n            le.species_fiskeridir_id AS le_species_fiskeridir_id,\n            h.haul_id AS h_haul_id,\n            h.ers_activity_id AS h_ers_activity_id,\n            h.duration AS h_duration,\n            h.haul_distance AS h_haul_distance,\n            h.catch_location_start AS h_catch_location_start,\n            h.catch_locations AS h_catch_locations,\n            h.ocean_depth_end AS h_ocean_depth_end,\n            h.ocean_depth_start AS h_ocean_depth_start,\n            h.quota_type_id AS h_quota_type_id,\n            h.start_latitude AS h_start_latitude,\n            h.start_longitude AS h_start_longitude,\n            h.start_timestamp AS h_start_timestamp,\n            h.stop_timestamp AS h_stop_timestamp,\n            h.stop_latitude AS h_stop_latitude,\n            h.stop_longitude AS h_stop_longitude,\n            h.gear_id AS h_gear_id,\n            h.gear_group_id AS h_gear_group_id,\n            h.fiskeridir_vessel_id AS h_fiskeridir_vessel_id,\n            h.vessel_call_sign AS h_vessel_call_sign,\n            h.vessel_call_sign_ers AS h_vessel_call_sign_ers,\n            h.vessel_length AS h_vessel_length,\n            h.vessel_length_group AS h_vessel_length_group,\n            h.vessel_name AS h_vessel_name,\n            h.vessel_name_ers AS h_vessel_name_ers,\n            h.catches AS h_catches,\n            h.whale_catches AS h_whale_catches,\n            f.tool_id AS f_tool_id,\n            f.barentswatch_vessel_id AS f_barentswatch_vessel_id,\n            f.fiskeridir_vessel_id AS f_fiskeridir_vessel_id,\n            f.vessel_name AS f_vessel_name,\n            f.call_sign AS f_call_sign,\n            f.mmsi AS f_mmsi,\n            f.imo AS f_imo,\n            f.reg_num AS f_reg_num,\n            f.sbr_reg_num AS f_sbr_reg_num,\n            f.contact_phone AS f_contact_phone,\n            f.contact_email AS f_contact_email,\n            f.tool_type AS f_tool_type,\n            f.tool_type_name AS f_tool_type_name,\n            f.tool_color AS f_tool_color,\n            f.tool_count AS f_tool_count,\n            f.setup_timestamp AS f_setup_timestamp,\n            f.setup_processed_timestamp AS f_setup_processed_timestamp,\n            f.removed_timestamp AS f_removed_timestamp,\n            f.removed_processed_timestamp AS f_removed_processed_timestamp,\n            f.last_changed AS f_last_changed,\n            f.source AS f_source,\n            f.comment AS f_comment,\n            f.geometry_wkt AS f_geometry_wkt,\n            f.api_source AS f_api_source\n        FROM\n            trips t\n            LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n            LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n            LEFT JOIN landing_entries le ON l.landing_id = le.landing_id\n            LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n            LEFT JOIN fishing_facilities f ON f.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n            AND f.period && t.period\n        WHERE\n            t.fiskeridir_vessel_id = $1\n    )\nSELECT\n    q1.t_trip_id AS trip_id,\n    t_fiskeridir_vessel_id AS fiskeridir_vessel_id,\n    t_period AS period,\n    t_period_precision AS period_precision,\n    t_landing_coverage AS landing_coverage,\n    t_trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\",\n    t_start_port_id AS start_port_id,\n    t_end_port_id AS end_port_id,\n    total_gross_weight AS \"total_gross_weight!\",\n    total_living_weight AS \"total_living_weight!\",\n    total_product_weight AS \"total_product_weight!\",\n    num_deliveries AS \"num_deliveries!\",\n    gear_ids AS \"gear_ids!: Vec<Gear>\",\n    delivery_points AS \"delivery_points!\",\n    latest_landing_timestamp,\n    vessel_events::TEXT AS \"vessel_events!\",\n    hauls::TEXT AS \"hauls!\",\n    fishing_facilities::TEXT AS \"fishing_facilities!\",\n    COALESCE(catches, '[]')::TEXT AS \"catches!\"\nFROM\n    (\n        SELECT\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id,\n            COALESCE(SUM(le_gross_weight), 0) AS total_gross_weight,\n            COALESCE(SUM(le_living_weight), 0) AS total_living_weight,\n            COALESCE(SUM(le_product_weight), 0) AS total_product_weight,\n            COUNT(DISTINCT l_landing_id) AS num_deliveries,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_gear_id), NULL) AS gear_ids,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_delivery_point_id), NULL) AS delivery_points,\n            MAX(l_landing_timestamp) AS latest_landing_timestamp,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'vessel_event_id',\n                        v_vessel_event_id,\n                        'fiskeridir_vessel_id',\n                        v_fiskeridir_vessel_id,\n                        'timestamp',\n                        v_timestamp,\n                        'vessel_event_type_id',\n                        v_vessel_event_type_id\n                    )\n                    ORDER BY\n                        v_timestamp\n                ),\n                '[]'\n            ) AS vessel_events,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'haul_id',\n                        h_haul_id,\n                        'ers_activity_id',\n                        h_ers_activity_id,\n                        'duration',\n                        h_duration,\n                        'haul_distance',\n                        h_haul_distance,\n                        'catch_location_start',\n                        h_catch_location_start,\n                        'catch_locations',\n                        h_catch_locations,\n                        'ocean_depth_end',\n                        h_ocean_depth_end,\n                        'ocean_depth_start',\n                        h_ocean_depth_start,\n                        'quota_type_id',\n                        h_quota_type_id,\n                        'start_latitude',\n                        h_start_latitude,\n                        'start_longitude',\n                        h_start_longitude,\n                        'start_timestamp',\n                        h_start_timestamp,\n                        'stop_timestamp',\n                        h_stop_timestamp,\n                        'stop_latitude',\n                        h_stop_latitude,\n                        'stop_longitude',\n                        h_stop_longitude,\n                        'gear_id',\n                        h_gear_id,\n                        'gear_group_id',\n                        h_gear_group_id,\n                        'fiskeridir_vessel_id',\n                        h_fiskeridir_vessel_id,\n                        'vessel_call_sign',\n                        h_vessel_call_sign,\n                        'vessel_call_sign_ers',\n                        h_vessel_call_sign_ers,\n                        'vessel_length',\n                        h_vessel_length,\n                        'vessel_length_group',\n                        h_vessel_length_group,\n                        'vessel_name',\n                        h_vessel_name,\n                        'vessel_name_ers',\n                        h_vessel_name_ers,\n                        'catches',\n                        h_catches,\n                        'whale_catches',\n                        h_whale_catches\n                    )\n                ) FILTER (\n                    WHERE\n                        h_haul_id IS NOT NULL\n                ),\n                '[]'\n            ) AS hauls,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'tool_id',\n                        f_tool_id,\n                        'barentswatch_vessel_id',\n                        f_barentswatch_vessel_id,\n                        'fiskeridir_vessel_id',\n                        f_fiskeridir_vessel_id,\n                        'vessel_name',\n                        f_vessel_name,\n                        'call_sign',\n                        f_call_sign,\n                        'mmsi',\n                        f_mmsi,\n                        'imo',\n                        f_imo,\n                        'reg_num',\n                        f_reg_num,\n                        'sbr_reg_num',\n                        f_sbr_reg_num,\n                        'contact_phone',\n                        f_contact_phone,\n                        'contact_email',\n                        f_contact_email,\n                        'tool_type',\n                        f_tool_type,\n                        'tool_type_name',\n                        f_tool_type_name,\n                        'tool_color',\n                        f_tool_color,\n                        'tool_count',\n                        f_tool_count,\n                        'setup_timestamp',\n                        f_setup_timestamp,\n                        'setup_processed_timestamp',\n                        f_setup_processed_timestamp,\n                        'removed_timestamp',\n                        f_removed_timestamp,\n                        'removed_processed_timestamp',\n                        f_removed_processed_timestamp,\n                        'last_changed',\n                        f_last_changed,\n                        'source',\n                        f_source,\n                        'comment',\n                        f_comment,\n                        'geometry_wkt',\n                        ST_ASTEXT (f_geometry_wkt),\n                        'api_source',\n                        f_api_source\n                    )\n                ) FILTER (\n                    WHERE\n                        f_tool_id IS NOT NULL\n                ),\n                '[]'\n            ) AS fishing_facilities\n        FROM\n            everything\n        GROUP BY\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id\n    ) q1\n    LEFT JOIN (\n        SELECT\n            qi.t_trip_id,\n            JSONB_AGG(qi.catches) AS catches\n        FROM\n            (\n                SELECT\n                    t_trip_id,\n                    JSONB_BUILD_OBJECT(\n                        'living_weight',\n                        SUM(le_living_weight),\n                        'gross_weight',\n                        SUM(le_gross_weight),\n                        'product_weight',\n                        SUM(le_product_weight),\n                        'species_fiskeridir_id',\n                        le_species_fiskeridir_id,\n                        'product_quality_id',\n                        l_product_quality_id\n                    ) AS catches\n                FROM\n                    everything\n                WHERE\n                    l_product_quality_id IS NOT NULL\n                    AND le_species_fiskeridir_id IS NOT NULL\n                GROUP BY\n                    t_trip_id,\n                    l_product_quality_id,\n                    le_species_fiskeridir_id\n            ) qi\n        GROUP BY\n            qi.t_trip_id\n    ) q2 ON q1.t_trip_id = q2.t_trip_id\n            "
  },
  "4e16660dbaaba147474f7afa552fd6bbe2da624f563166b1dfd8fa48b748a91a": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 1,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\nSELECT\n    trip_id,\n    period,\n    period_precision,\n    landing_coverage,\n    trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\"\nFROM\n    trips\nWHERE\n    fiskeridir_vessel_id = $1\n    AND trip_assembler_id = $2\n    AND trip_precision_status_id = $3\n            "
  },
  "50b33a759f3095c11f21d72ea1e99180dce154cf64f95c5d9def082e2b2eb564": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TimestamptzArray",
          "TimestamptzArray"
        ]
      }
    },
    "query": "\nDELETE FROM hauls_matrix h USING UNNEST(\n    $1::BIGINT[],\n    $2::TIMESTAMPTZ[],\n    $3::TIMESTAMPTZ[]\n) u (message_id, start_timestamp, stop_timestamp)\nWHERE\n    h.message_id = u.message_id\n    AND h.start_timestamp = u.start_timestamp\n    AND h.stop_timestamp = u.stop_timestamp\n            "
  },
  "545e65186937b1236b4461b8fa0b1dfc1c8ccdd6e3cbb204622a08c6caeeccf2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "UuidArray",
          "UuidArray",
          "TextArray",
          "TextArray",
          "Int4Array",
          "Int8Array",
          "TextArray",
          "TextArray",
          "TextArray",
          "TextArray",
          "Int4Array",
          "TextArray",
          "TextArray",
          "Int4Array",
          "TimestamptzArray",
          "TimestamptzArray",
          "TimestamptzArray",
          "TimestamptzArray",
          "TimestamptzArray",
          "TextArray",
          "TextArray",
          {
            "Custom": {
              "kind": {
                "Array": {
                  "Custom": {
                    "kind": "Simple",
                    "name": "geometry"
                  }
                }
              },
              "name": "_geometry"
            }
          },
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    fishing_facilities AS f (\n        tool_id,\n        barentswatch_vessel_id,\n        fiskeridir_vessel_id,\n        vessel_name,\n        call_sign,\n        mmsi,\n        imo,\n        reg_num,\n        sbr_reg_num,\n        contact_phone,\n        contact_email,\n        tool_type,\n        tool_type_name,\n        tool_color,\n        tool_count,\n        setup_timestamp,\n        setup_processed_timestamp,\n        removed_timestamp,\n        removed_processed_timestamp,\n        last_changed,\n        source,\n        \"comment\",\n        geometry_wkt,\n        api_source\n    )\nSELECT\n    u.tool_id,\n    u.barentswatch_vessel_id,\n    v.fiskeridir_vessel_id,\n    u.vessel_name,\n    u.call_sign,\n    u.mmsi,\n    u.imo,\n    u.reg_num,\n    u.sbr_reg_num,\n    u.contact_phone,\n    u.contact_email,\n    u.tool_type,\n    u.tool_type_name,\n    u.tool_color,\n    u.tool_count,\n    u.setup_timestamp,\n    u.setup_processed_timestamp,\n    u.removed_timestamp,\n    u.removed_processed_timestamp,\n    u.last_changed,\n    u.source,\n    u.comment,\n    u.geometry_wkt,\n    u.api_source\nFROM\n    UNNEST(\n        $1::UUID[],\n        $2::UUID[],\n        $3::TEXT[],\n        $4::TEXT[],\n        $5::INT[],\n        $6::BIGINT[],\n        $7::TEXT[],\n        $8::TEXT[],\n        $9::TEXT[],\n        $10::TEXT[],\n        $11::INT[],\n        $12::TEXT[],\n        $13::TEXT[],\n        $14::INT[],\n        $15::TIMESTAMPTZ[],\n        $16::TIMESTAMPTZ[],\n        $17::TIMESTAMPTZ[],\n        $18::TIMESTAMPTZ[],\n        $19::TIMESTAMPTZ[],\n        $20::TEXT[],\n        $21::TEXT[],\n        $22::GEOMETRY[],\n        $23::INT[]\n    ) u (\n        tool_id,\n        barentswatch_vessel_id,\n        vessel_name,\n        call_sign,\n        mmsi,\n        imo,\n        reg_num,\n        sbr_reg_num,\n        contact_phone,\n        contact_email,\n        tool_type,\n        tool_type_name,\n        tool_color,\n        tool_count,\n        setup_timestamp,\n        setup_processed_timestamp,\n        removed_timestamp,\n        removed_processed_timestamp,\n        last_changed,\n        source,\n        \"comment\",\n        geometry_wkt,\n        api_source\n    )\n    LEFT JOIN (\n        SELECT\n            call_sign,\n            MIN(fiskeridir_vessel_id) AS fiskeridir_vessel_id\n        FROM\n            fiskeridir_vessels\n        GROUP BY\n            call_sign\n        HAVING\n            COUNT(fiskeridir_vessel_id) = 1\n    ) v ON v.call_sign = u.call_sign\nON CONFLICT (tool_id) DO\nUPDATE\nSET\n    barentswatch_vessel_id = COALESCE(\n        EXCLUDED.barentswatch_vessel_id,\n        f.barentswatch_vessel_id\n    ),\n    fiskeridir_vessel_id = COALESCE(\n        EXCLUDED.fiskeridir_vessel_id,\n        f.fiskeridir_vessel_id\n    ),\n    vessel_name = COALESCE(EXCLUDED.vessel_name, f.vessel_name),\n    call_sign = COALESCE(EXCLUDED.call_sign, f.call_sign),\n    mmsi = COALESCE(EXCLUDED.mmsi, f.mmsi),\n    imo = COALESCE(EXCLUDED.imo, f.imo),\n    reg_num = COALESCE(EXCLUDED.reg_num, f.reg_num),\n    sbr_reg_num = COALESCE(EXCLUDED.sbr_reg_num, f.sbr_reg_num),\n    contact_phone = COALESCE(EXCLUDED.contact_phone, f.contact_phone),\n    contact_email = COALESCE(EXCLUDED.contact_email, f.contact_email),\n    tool_type = EXCLUDED.tool_type,\n    tool_type_name = COALESCE(EXCLUDED.tool_type_name, f.tool_type_name),\n    tool_color = COALESCE(EXCLUDED.tool_color, f.tool_color),\n    tool_count = COALESCE(EXCLUDED.tool_count, f.tool_count),\n    setup_timestamp = EXCLUDED.setup_timestamp,\n    setup_processed_timestamp = COALESCE(\n        EXCLUDED.setup_processed_timestamp,\n        f.setup_processed_timestamp\n    ),\n    removed_timestamp = COALESCE(EXCLUDED.removed_timestamp, f.removed_timestamp),\n    removed_processed_timestamp = COALESCE(\n        EXCLUDED.removed_processed_timestamp,\n        f.removed_processed_timestamp\n    ),\n    last_changed = EXCLUDED.last_changed,\n    source = COALESCE(EXCLUDED.source, f.source),\n    \"comment\" = COALESCE(EXCLUDED.comment, f.comment),\n    geometry_wkt = EXCLUDED.geometry_wkt,\n    api_source = EXCLUDED.api_source\n            "
  },
  "564ecbda445799ebe77b936a3199254676762e91b0006b9782f124f15f4b3778": {
    "describe": {
      "columns": [
        {
          "name": "mmsi",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "latitude",
          "ordinal": 1,
          "type_info": "Numeric"
        },
        {
          "name": "longitude",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "course_over_ground",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "rate_of_turn",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "true_heading",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "speed_over_ground",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "msgtime",
          "ordinal": 7,
          "type_info": "Timestamptz"
        },
        {
          "name": "navigational_status",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "distance_to_shore",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    mmsi,\n    latitude,\n    longitude,\n    course_over_ground,\n    rate_of_turn,\n    true_heading,\n    speed_over_ground,\n    TIMESTAMP AS msgtime,\n    navigation_status_id AS navigational_status,\n    distance_to_shore\nFROM\n    current_ais_positions\n            "
  },
  "5869234c9b9d67363dbc4a2188df4507bddf24b864a27cd5580aa8bb7ab62ba5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    area_groupings (area_grouping_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (area_grouping_id) DO NOTHING\n                "
  },
  "58db19ac9d5025bf20b8dfe529186f0dd0cd155962d213f5069010da49f616e6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "TstzRange",
          "Timestamptz"
        ]
      }
    },
    "query": "\nUPDATE trips\nSET\n    landing_coverage = tstzrange (LOWER(period), $3)\nWHERE\n    trip_id = (\n        SELECT\n            trip_id\n        FROM\n            trips\n        WHERE\n            fiskeridir_vessel_id = $1\n            AND period < $2\n        ORDER BY\n            period DESC\n        LIMIT\n            1\n    )\n            "
  },
  "59c3730e7499d456a1920f0cbc877e1d33d35beb31eb634dcfa5b558abab6f08": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 1,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    trip_id,\n    period,\n    period_precision,\n    landing_coverage,\n    trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\"\nFROM\n    trips\nWHERE\n    fiskeridir_vessel_id = $1\n    AND UPPER(period) <= $2\nORDER BY\n    period DESC\nLIMIT\n    1\n            "
  },
  "5db74858b380d3057f2318276c64831d0f4fda727f21dc7553b06f3fb9b341d8": {
    "describe": {
      "columns": [
        {
          "name": "landing_id",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    landing_id\nFROM\n    landings\nWHERE\n    fiskeridir_vessel_id = $1\nORDER BY\n    landing_id\n            "
  },
  "5de184c12731c0e021da2ad72c77cbe0a5791bdc0f92c673008593a1354e2e40": {
    "describe": {
      "columns": [
        {
          "name": "call_sign",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "course",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "latitude",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "longitude",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "registration_id",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "speed",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "timestamp",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_length",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "vessel_name",
          "ordinal": 8,
          "type_info": "Varchar"
        },
        {
          "name": "vessel_type",
          "ordinal": 9,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Timestamptz",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    call_sign,\n    course,\n    latitude,\n    longitude,\n    registration_id,\n    speed,\n    \"timestamp\",\n    vessel_length,\n    vessel_name,\n    vessel_type\nFROM\n    vms_positions\nWHERE\n    call_sign = $1\n    AND \"timestamp\" BETWEEN $2 AND $3\nORDER BY\n    \"timestamp\" ASC\n            "
  },
  "61b185f1f1c64af97d88aac5849e430192d876576511844e25d43adf87b59542": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TimestamptzArray",
          "TimestamptzArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_dca_catches (\n        message_id,\n        start_timestamp,\n        stop_timestamp,\n        message_version,\n        living_weight,\n        species_fao_id,\n        species_fiskeridir_id,\n        species_group_id,\n        species_main_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::timestamptz[],\n        $3::timestamptz[],\n        $4::INT[],\n        $5::INT[],\n        $6::VARCHAR[],\n        $7::INT[],\n        $8::INT[],\n        $9::INT[]\n    )\nON CONFLICT (\n    message_id,\n    start_timestamp,\n    stop_timestamp,\n    species_fao_id\n) DO NOTHING\n            "
  },
  "6916aa8e7efce68ef00bf374bb59205ff806cd7ee96a23348de1a6f9c196c7e6": {
    "describe": {
      "columns": [
        {
          "name": "x_index!",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "y_index!",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "sum_living!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    CASE\n        WHEN $1 = 0 THEN matrix_month_bucket\n        WHEN $1 = 1 THEN gear_group_id\n        WHEN $1 = 2 THEN species_group_id\n        WHEN $1 = 3 THEN vessel_length_group\n    END AS \"x_index!\",\n    CASE\n        WHEN $2 = 0 THEN matrix_month_bucket\n        WHEN $2 = 1 THEN gear_group_id\n        WHEN $2 = 2 THEN species_group_id\n        WHEN $2 = 3 THEN vessel_length_group\n        WHEN $2 = 4 THEN catch_location_matrix_index\n    END AS \"y_index!\",\n    COALESCE(SUM(living_weight::BIGINT), 0)::BIGINT AS \"sum_living!\"\nFROM\n    hauls_matrix\nGROUP BY\n    1,\n    2\n            "
  },
  "6b63083645ee5131c65b06de6940f6f49491cf5fc32b7d57e113b29b8244e6f6": {
    "describe": {
      "columns": [
        {
          "name": "mmsi",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "imo_number",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "call_sign",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "ship_width",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "ship_length",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "eta",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "destination",
          "ordinal": 7,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    mmsi,\n    imo_number,\n    call_sign,\n    NAME,\n    ship_width,\n    ship_length,\n    eta,\n    destination\nFROM\n    ais_vessels\n            "
  },
  "731e852a607ae33927aaaa91f6bd6c4e7109590e46809605c1716efe82505628": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "NumericArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    catch_areas (catch_area_id, latitude, longitude)\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::DECIMAL[], $3::DECIMAL[])\nON CONFLICT (catch_area_id) DO\nUPDATE\nSET\n    latitude = excluded.latitude,\n    longitude = excluded.longitude\nWHERE\n    catch_areas.latitude IS NULL\n    AND catch_areas.longitude IS NULL\n                "
  },
  "78a95933cf64d372b5690c2aaeb39dcdb137b2c7117d31399346bb70dc495f02": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "TimestamptzArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "DateArray",
          "DateArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_tra (\n        message_id,\n        message_number,\n        message_timestamp,\n        ers_message_type_id,\n        message_year,\n        relevant_year,\n        sequence_number,\n        reloading_timestamp,\n        fiskeridir_vessel_id,\n        vessel_building_year,\n        vessel_call_sign,\n        vessel_call_sign_ers,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_county,\n        vessel_county_code,\n        vessel_greatest_length,\n        vessel_identification,\n        vessel_length,\n        vessel_length_group,\n        vessel_length_group_code,\n        vessel_material_code,\n        vessel_municipality,\n        vessel_municipality_code,\n        vessel_name,\n        vessel_name_ers,\n        vessel_nationality_code,\n        fiskeridir_vessel_nationality_group_id,\n        vessel_rebuilding_year,\n        vessel_registration_id,\n        vessel_registration_id_ers,\n        vessel_valid_until,\n        vessel_valid_from,\n        vessel_width\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::timestamptz[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::timestamptz[],\n        $9::INT[],\n        $10::INT[],\n        $11::VARCHAR[],\n        $12::VARCHAR[],\n        $13::INT[],\n        $14::INT[],\n        $15::INT[],\n        $16::INT[],\n        $17::VARCHAR[],\n        $18::INT[],\n        $19::DECIMAL[],\n        $20::VARCHAR[],\n        $21::DECIMAL[],\n        $22::VARCHAR[],\n        $23::INT[],\n        $24::VARCHAR[],\n        $25::VARCHAR[],\n        $26::INT[],\n        $27::VARCHAR[],\n        $28::VARCHAR[],\n        $29::VARCHAR[],\n        $30::INT[],\n        $31::INT[],\n        $32::VARCHAR[],\n        $33::VARCHAR[],\n        $34::date[],\n        $35::date[],\n        $36::DECIMAL[]\n    )\nON CONFLICT (message_id) DO NOTHING\n            "
  },
  "78cc7c8e345cdce9b3b7ad5e46c963fc044adc0abb2e25da682dcf95e4f24261": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "TimestamptzArray",
          "NumericArray",
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    vms_positions (\n        call_sign,\n        course,\n        gross_tonnage,\n        latitude,\n        longitude,\n        message_id,\n        message_type,\n        message_type_code,\n        registration_id,\n        speed,\n        \"timestamp\",\n        vessel_length,\n        vessel_name,\n        vessel_type\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::VARCHAR[],\n        $2::INT[],\n        $3::INT[],\n        $4::DECIMAL[],\n        $5::DECIMAL[],\n        $6::INT[],\n        $7::VARCHAR[],\n        $8::VARCHAR[],\n        $9::VARCHAR[],\n        $10::DECIMAL[],\n        $11::timestamptz[],\n        $12::DECIMAL[],\n        $13::VARCHAR[],\n        $14::VARCHAR[]\n    )\nON CONFLICT (message_id, call_sign) DO NOTHING\n            "
  },
  "7995adf5b81e38ca6af97cfc294b62272f4797a739ba668765b2598d1b848ba7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    delivery_points (\n        delivery_point_id,\n        delivery_point_type_id,\n        delivery_point_source_id\n    )\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::INT[], $3::INT[])\nON CONFLICT (delivery_point_id) DO NOTHING\n            "
  },
  "7ef092ec17e3f3249255df9d1911ebef26ae67b364c2e2fc1b05e584317044a7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "DateArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_dca_other (\n        message_id,\n        message_number,\n        message_timestamp,\n        ers_message_type_id,\n        message_year,\n        relevant_year,\n        sequence_number,\n        message_version,\n        ers_activity_id,\n        quota_type_id,\n        port_id,\n        fiskeridir_vessel_id,\n        vessel_building_year,\n        vessel_call_sign,\n        vessel_call_sign_ers,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_county,\n        vessel_county_code,\n        vessel_greatest_length,\n        vessel_identification,\n        vessel_length,\n        vessel_length_group,\n        vessel_length_group_code,\n        vessel_material_code,\n        vessel_municipality,\n        vessel_municipality_code,\n        vessel_name,\n        vessel_name_ers,\n        vessel_nationality_code,\n        fiskeridir_vessel_nationality_group_id,\n        vessel_rebuilding_year,\n        vessel_registration_id,\n        vessel_registration_id_ers,\n        vessel_valid_until,\n        vessel_width\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::timestamptz[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::INT[],\n        $9::VARCHAR[],\n        $10::INT[],\n        $11::VARCHAR[],\n        $12::INT[],\n        $13::INT[],\n        $14::VARCHAR[],\n        $15::VARCHAR[],\n        $16::INT[],\n        $17::INT[],\n        $18::INT[],\n        $19::INT[],\n        $20::VARCHAR[],\n        $21::INT[],\n        $22::DECIMAL[],\n        $23::VARCHAR[],\n        $24::DECIMAL[],\n        $25::VARCHAR[],\n        $26::INT[],\n        $27::VARCHAR[],\n        $28::VARCHAR[],\n        $29::INT[],\n        $30::VARCHAR[],\n        $31::VARCHAR[],\n        $32::VARCHAR[],\n        $33::INT[],\n        $34::INT[],\n        $35::VARCHAR[],\n        $36::VARCHAR[],\n        $37::date[],\n        $38::DECIMAL[]\n    )\nON CONFLICT (message_id) DO NOTHING\n            "
  },
  "81516cd3fff7220bf8a111b4411fd681852691c65e352907bbc0867c5280860f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TimestamptzArray",
          "TimestamptzArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_dca_whale_catches (\n        message_id,\n        start_timestamp,\n        stop_timestamp,\n        message_version,\n        whale_grenade_number,\n        whale_blubber_measure_a,\n        whale_blubber_measure_b,\n        whale_blubber_measure_c,\n        whale_circumference,\n        whale_fetus_length,\n        whale_gender_id,\n        whale_individual_number,\n        whale_length\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::timestamptz[],\n        $3::timestamptz[],\n        $4::INT[],\n        $5::VARCHAR[],\n        $6::INT[],\n        $7::INT[],\n        $8::INT[],\n        $9::INT[],\n        $10::INT[],\n        $11::INT[],\n        $12::INT[],\n        $13::INT[]\n    )\nON CONFLICT (\n    message_id,\n    start_timestamp,\n    stop_timestamp,\n    whale_grenade_number\n) DO NOTHING\n            "
  },
  "85720e65ca627b504427389b69b979a8728fcf2acd2498b3106556ed40572780": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    catch_main_area_fao (catch_main_area_fao_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (catch_main_area_fao_id) DO NOTHING\n                "
  },
  "8918bd19bb31b88fba67fde04509b22a4e74c743d14211d25020d61cd985f377": {
    "describe": {
      "columns": [
        {
          "name": "latitude",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "longitude",
          "ordinal": 1,
          "type_info": "Numeric"
        },
        {
          "name": "mmsi",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "msgtime",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "course_over_ground",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "navigational_status",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "rate_of_turn",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "speed_over_ground",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "true_heading",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "distance_to_shore",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Timestamptz",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    latitude,\n    longitude,\n    mmsi,\n    \"timestamp\" AS msgtime,\n    course_over_ground,\n    navigation_status_id AS navigational_status,\n    rate_of_turn,\n    speed_over_ground,\n    true_heading,\n    distance_to_shore\nFROM\n    ais_positions\nWHERE\n    (\n        $1::INT IS NULL\n        OR mmsi = $1\n    )\n    AND (\n        (\n            $2::timestamptz IS NULL\n            AND $3::timestamptz IS NULL\n        )\n        OR \"timestamp\" BETWEEN $2 AND $3\n    )\nORDER BY\n    \"timestamp\" ASC\n            "
  },
  "8aee9591a7eb25ac77394bbe9dfa535c58c520d72d529cb27ec22f3d39256785": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    fiskeridir_vessels (\n        fiskeridir_vessel_id,\n        call_sign,\n        registration_id,\n        \"name\",\n        \"length\",\n        building_year,\n        engine_power,\n        engine_building_year,\n        fiskeridir_vessel_type_id,\n        norwegian_municipality_id,\n        norwegian_county_id,\n        fiskeridir_nation_group_id,\n        nation_id,\n        gross_tonnage_1969,\n        gross_tonnage_other,\n        rebuilding_year,\n        fiskeridir_length_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::VARCHAR[],\n        $3::VARCHAR[],\n        $4::VARCHAR[],\n        $5::DECIMAL[],\n        $6::INT[],\n        $7::INT[],\n        $8::INT[],\n        $9::INT[],\n        $10::INT[],\n        $11::INT[],\n        $12::VARCHAR[],\n        $13::VARCHAR[],\n        $14::INT[],\n        $15::INT[],\n        $16::INT[],\n        $17::INT[]\n    )\nON CONFLICT (fiskeridir_vessel_id) DO NOTHING\n            "
  },
  "8eb814fcde0f1787d9c86b11131db9cce2b4e1d9b39b7be89a2ee2297b25fb74": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "Int8Array",
          "JsonArray",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    fiskeridir_vessels (\n        fiskeridir_vessel_id,\n        norwegian_municipality_id,\n        call_sign,\n        \"name\",\n        registration_id,\n        \"length\",\n        \"width\",\n        engine_power,\n        imo_number,\n        owners,\n        fiskeridir_vessel_source_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::VARCHAR[],\n        $4::VARCHAR[],\n        $5::VARCHAR[],\n        $6::DECIMAL[],\n        $7::DECIMAL[],\n        $8::INT[],\n        $9::BIGINT[],\n        $10::JSON[],\n        $11::INT[]\n    )\nON CONFLICT (fiskeridir_vessel_id) DO\nUPDATE\nSET\n    norwegian_municipality_id = EXCLUDED.norwegian_municipality_id,\n    call_sign = EXCLUDED.call_sign,\n    \"name\" = EXCLUDED.name,\n    registration_id = EXCLUDED.registration_id,\n    \"length\" = EXCLUDED.length,\n    \"width\" = EXCLUDED.width,\n    engine_power = EXCLUDED.engine_power,\n    imo_number = EXCLUDED.imo_number,\n    owners = EXCLUDED.owners,\n    fiskeridir_vessel_source_id = EXCLUDED.fiskeridir_vessel_source_id\n            "
  },
  "8ee0d5020639f583f29960b073ba2ab61203faa821584a31e01f08b64beed856": {
    "describe": {
      "columns": [
        {
          "name": "message_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "start_timestamp",
          "ordinal": 1,
          "type_info": "Timestamptz"
        },
        {
          "name": "stop_timestamp",
          "ordinal": 2,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT DISTINCT\n    h.message_id,\n    h.start_timestamp,\n    h.stop_timestamp\nFROM\n    hauls h\n    LEFT JOIN hauls_matrix m ON h.message_id = m.message_id\n    AND h.start_timestamp = m.start_timestamp\n    AND h.stop_timestamp = m.stop_timestamp\nWHERE\n    m.haul_distributor_id IS NULL\n    AND h.total_living_weight > 0\n    AND h.fiskeridir_vessel_id = $1\n            "
  },
  "90692aec2f77f36b2d8e4d3e122b8fd69a7d0f6b2dd960f90ce537bfad6836b5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nDELETE FROM ers_dca\nWHERE\n    relevant_year = $1\n            "
  },
  "922f73fd586c1244657d8f10d697474c2f091330eb30945bb107f7808a520105": {
    "describe": {
      "columns": [
        {
          "name": "weight",
          "ordinal": 0,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    SUM(le.living_weight) AS weight\nFROM\n    landings AS l\n    INNER JOIN landing_entries AS le ON l.landing_id = le.landing_id\nWHERE\n    fiskeridir_vessel_id = $1\n            "
  },
  "93af2859198c9190838c4a751249804de0a7609768562f257a3c395319b3a71c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Timestamptz"
        ]
      }
    },
    "query": "\nINSERT INTO\n    trip_calculation_timers (fiskeridir_vessel_id, trip_assembler_id, timer)\nVALUES\n    ($1, $2, $3)\nON CONFLICT (fiskeridir_vessel_id) DO\nUPDATE\nSET\n    timer = excluded.timer\n            "
  },
  "93b6c76ee7363b0babcf980d81ffebb1cfa105220232c9a1fd5b1755049b5d20": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    species_fiskeridir (species_fiskeridir_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (species_fiskeridir_id) DO\nUPDATE\nSET\n    \"name\" = COALESCE(species_fiskeridir.name, EXCLUDED.name)\n            "
  },
  "940f050808a1d10d1ab17f2401ace75f167ac4e31763d711f997be12e37c4d3e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nDELETE FROM ers_departures c\nWHERE\n    c.relevant_year = $1\n            "
  },
  "9410b4916c827149567fb9b88163eab9f2935f9c468c020e7dbbc037cbc00b9b": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 4,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "start_port_id",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_id",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "total_gross_weight!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "total_living_weight!",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "total_product_weight!",
          "ordinal": 10,
          "type_info": "Numeric"
        },
        {
          "name": "num_deliveries!",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "gear_ids!: Vec<Gear>",
          "ordinal": 12,
          "type_info": "Int4Array"
        },
        {
          "name": "delivery_points!",
          "ordinal": 13,
          "type_info": "VarcharArray"
        },
        {
          "name": "latest_landing_timestamp",
          "ordinal": 14,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_events!",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "hauls!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "fishing_facilities!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "catches!",
          "ordinal": 18,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int8",
          "Int8",
          "Bool"
        ]
      }
    },
    "query": "\nWITH\n    everything AS (\n        SELECT\n            t.trip_id AS t_trip_id,\n            t.fiskeridir_vessel_id AS t_fiskeridir_vessel_id,\n            t.period AS t_period,\n            t.period_precision AS t_period_precision,\n            t.landing_coverage AS t_landing_coverage,\n            t.trip_assembler_id AS t_trip_assembler_id,\n            t.start_port_id AS t_start_port_id,\n            t.end_port_id AS t_end_port_id,\n            v.vessel_event_id AS v_vessel_event_id,\n            v.fiskeridir_vessel_id AS v_fiskeridir_vessel_id,\n            v.timestamp AS v_timestamp,\n            v.vessel_event_type_id AS v_vessel_event_type_id,\n            l.landing_id AS l_landing_id,\n            l.landing_timestamp AS l_landing_timestamp,\n            l.gear_id AS l_gear_id,\n            l.product_quality_id AS l_product_quality_id,\n            l.delivery_point_id AS l_delivery_point_id,\n            le.gross_weight AS le_gross_weight,\n            le.living_weight AS le_living_weight,\n            le.product_weight AS le_product_weight,\n            le.species_fiskeridir_id AS le_species_fiskeridir_id,\n            h.haul_id AS h_haul_id,\n            h.ers_activity_id AS h_ers_activity_id,\n            h.duration AS h_duration,\n            h.haul_distance AS h_haul_distance,\n            h.catch_location_start AS h_catch_location_start,\n            h.catch_locations AS h_catch_locations,\n            h.ocean_depth_end AS h_ocean_depth_end,\n            h.ocean_depth_start AS h_ocean_depth_start,\n            h.quota_type_id AS h_quota_type_id,\n            h.start_latitude AS h_start_latitude,\n            h.start_longitude AS h_start_longitude,\n            h.start_timestamp AS h_start_timestamp,\n            h.stop_timestamp AS h_stop_timestamp,\n            h.stop_latitude AS h_stop_latitude,\n            h.stop_longitude AS h_stop_longitude,\n            h.gear_id AS h_gear_id,\n            h.gear_group_id AS h_gear_group_id,\n            h.fiskeridir_vessel_id AS h_fiskeridir_vessel_id,\n            h.vessel_call_sign AS h_vessel_call_sign,\n            h.vessel_call_sign_ers AS h_vessel_call_sign_ers,\n            h.vessel_length AS h_vessel_length,\n            h.vessel_length_group AS h_vessel_length_group,\n            h.vessel_name AS h_vessel_name,\n            h.vessel_name_ers AS h_vessel_name_ers,\n            h.catches AS h_catches,\n            h.whale_catches AS h_whale_catches,\n            f.tool_id AS f_tool_id,\n            f.barentswatch_vessel_id AS f_barentswatch_vessel_id,\n            f.fiskeridir_vessel_id AS f_fiskeridir_vessel_id,\n            f.vessel_name AS f_vessel_name,\n            f.call_sign AS f_call_sign,\n            f.mmsi AS f_mmsi,\n            f.imo AS f_imo,\n            f.reg_num AS f_reg_num,\n            f.sbr_reg_num AS f_sbr_reg_num,\n            f.contact_phone AS f_contact_phone,\n            f.contact_email AS f_contact_email,\n            f.tool_type AS f_tool_type,\n            f.tool_type_name AS f_tool_type_name,\n            f.tool_color AS f_tool_color,\n            f.tool_count AS f_tool_count,\n            f.setup_timestamp AS f_setup_timestamp,\n            f.setup_processed_timestamp AS f_setup_processed_timestamp,\n            f.removed_timestamp AS f_removed_timestamp,\n            f.removed_processed_timestamp AS f_removed_processed_timestamp,\n            f.last_changed AS f_last_changed,\n            f.source AS f_source,\n            f.comment AS f_comment,\n            f.geometry_wkt AS f_geometry_wkt,\n            f.api_source AS f_api_source\n        FROM\n            (\n                SELECT\n                    *\n                FROM\n                    trips\n                WHERE\n                    fiskeridir_vessel_id = $1\n                ORDER BY\n                    CASE\n                        WHEN $2 = 1 THEN period\n                    END ASC,\n                    CASE\n                        WHEN $2 = 2 THEN period\n                    END DESC\n                OFFSET\n                    $3\n                LIMIT\n                    $4\n            ) t\n            LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n            LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n            LEFT JOIN landing_entries le ON l.landing_id = le.landing_id\n            LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n            LEFT JOIN fishing_facilities f ON $5\n            AND f.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n            AND f.period && t.period\n    )\nSELECT\n    q1.t_trip_id AS trip_id,\n    t_fiskeridir_vessel_id AS fiskeridir_vessel_id,\n    t_period AS period,\n    t_period_precision AS period_precision,\n    t_landing_coverage AS landing_coverage,\n    t_trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\",\n    t_start_port_id AS start_port_id,\n    t_end_port_id AS end_port_id,\n    total_gross_weight AS \"total_gross_weight!\",\n    total_living_weight AS \"total_living_weight!\",\n    total_product_weight AS \"total_product_weight!\",\n    num_deliveries AS \"num_deliveries!\",\n    gear_ids AS \"gear_ids!: Vec<Gear>\",\n    delivery_points AS \"delivery_points!\",\n    latest_landing_timestamp,\n    vessel_events::TEXT AS \"vessel_events!\",\n    hauls::TEXT AS \"hauls!\",\n    fishing_facilities::TEXT AS \"fishing_facilities!\",\n    COALESCE(catches, '[]')::TEXT AS \"catches!\"\nFROM\n    (\n        SELECT\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id,\n            COALESCE(SUM(le_gross_weight), 0) AS total_gross_weight,\n            COALESCE(SUM(le_living_weight), 0) AS total_living_weight,\n            COALESCE(SUM(le_product_weight), 0) AS total_product_weight,\n            COUNT(DISTINCT l_landing_id) AS num_deliveries,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_gear_id), NULL) AS gear_ids,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_delivery_point_id), NULL) AS delivery_points,\n            MAX(l_landing_timestamp) AS latest_landing_timestamp,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'vessel_event_id',\n                        v_vessel_event_id,\n                        'fiskeridir_vessel_id',\n                        v_fiskeridir_vessel_id,\n                        'timestamp',\n                        v_timestamp,\n                        'vessel_event_type_id',\n                        v_vessel_event_type_id\n                    )\n                    ORDER BY\n                        v_timestamp\n                ),\n                '[]'\n            ) AS vessel_events,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'haul_id',\n                        h_haul_id,\n                        'ers_activity_id',\n                        h_ers_activity_id,\n                        'duration',\n                        h_duration,\n                        'haul_distance',\n                        h_haul_distance,\n                        'catch_location_start',\n                        h_catch_location_start,\n                        'catch_locations',\n                        h_catch_locations,\n                        'ocean_depth_end',\n                        h_ocean_depth_end,\n                        'ocean_depth_start',\n                        h_ocean_depth_start,\n                        'quota_type_id',\n                        h_quota_type_id,\n                        'start_latitude',\n                        h_start_latitude,\n                        'start_longitude',\n                        h_start_longitude,\n                        'start_timestamp',\n                        h_start_timestamp,\n                        'stop_timestamp',\n                        h_stop_timestamp,\n                        'stop_latitude',\n                        h_stop_latitude,\n                        'stop_longitude',\n                        h_stop_longitude,\n                        'gear_id',\n                        h_gear_id,\n                        'gear_group_id',\n                        h_gear_group_id,\n                        'fiskeridir_vessel_id',\n                        h_fiskeridir_vessel_id,\n                        'vessel_call_sign',\n                        h_vessel_call_sign,\n                        'vessel_call_sign_ers',\n                        h_vessel_call_sign_ers,\n                        'vessel_length',\n                        h_vessel_length,\n                        'vessel_length_group',\n                        h_vessel_length_group,\n                        'vessel_name',\n                        h_vessel_name,\n                        'vessel_name_ers',\n                        h_vessel_name_ers,\n                        'catches',\n                        h_catches,\n                        'whale_catches',\n                        h_whale_catches\n                    )\n                ) FILTER (\n                    WHERE\n                        h_haul_id IS NOT NULL\n                ),\n                '[]'\n            ) AS hauls,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'tool_id',\n                        f_tool_id,\n                        'barentswatch_vessel_id',\n                        f_barentswatch_vessel_id,\n                        'fiskeridir_vessel_id',\n                        f_fiskeridir_vessel_id,\n                        'vessel_name',\n                        f_vessel_name,\n                        'call_sign',\n                        f_call_sign,\n                        'mmsi',\n                        f_mmsi,\n                        'imo',\n                        f_imo,\n                        'reg_num',\n                        f_reg_num,\n                        'sbr_reg_num',\n                        f_sbr_reg_num,\n                        'contact_phone',\n                        f_contact_phone,\n                        'contact_email',\n                        f_contact_email,\n                        'tool_type',\n                        f_tool_type,\n                        'tool_type_name',\n                        f_tool_type_name,\n                        'tool_color',\n                        f_tool_color,\n                        'tool_count',\n                        f_tool_count,\n                        'setup_timestamp',\n                        f_setup_timestamp,\n                        'setup_processed_timestamp',\n                        f_setup_processed_timestamp,\n                        'removed_timestamp',\n                        f_removed_timestamp,\n                        'removed_processed_timestamp',\n                        f_removed_processed_timestamp,\n                        'last_changed',\n                        f_last_changed,\n                        'source',\n                        f_source,\n                        'comment',\n                        f_comment,\n                        'geometry_wkt',\n                        ST_ASTEXT (f_geometry_wkt),\n                        'api_source',\n                        f_api_source\n                    )\n                ) FILTER (\n                    WHERE\n                        f_tool_id IS NOT NULL\n                ),\n                '[]'\n            ) AS fishing_facilities\n        FROM\n            everything\n        GROUP BY\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id\n    ) q1\n    LEFT JOIN (\n        SELECT\n            qi.t_trip_id,\n            JSONB_AGG(qi.catches) AS catches\n        FROM\n            (\n                SELECT\n                    t_trip_id,\n                    JSONB_BUILD_OBJECT(\n                        'living_weight',\n                        SUM(le_living_weight),\n                        'gross_weight',\n                        SUM(le_gross_weight),\n                        'product_weight',\n                        SUM(le_product_weight),\n                        'species_fiskeridir_id',\n                        le_species_fiskeridir_id,\n                        'product_quality_id',\n                        l_product_quality_id\n                    ) AS catches\n                FROM\n                    everything\n                WHERE\n                    l_product_quality_id IS NOT NULL\n                    AND le_species_fiskeridir_id IS NOT NULL\n                GROUP BY\n                    t_trip_id,\n                    l_product_quality_id,\n                    le_species_fiskeridir_id\n            ) qi\n        GROUP BY\n            qi.t_trip_id\n    ) q2 ON q1.t_trip_id = q2.t_trip_id\nORDER BY\n    CASE\n        WHEN $2 = 1 THEN q1.t_period\n    END ASC,\n    CASE\n        WHEN $2 = 2 THEN q1.t_period\n    END DESC\n            "
  },
  "97f8481d58740ff62ce9652a59ebf53470acc0371d5ee0a90c0649e37245708e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Numeric",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\nUPDATE port_dock_points\nSET\n    latitude = $1,\n    longitude = $2\nWHERE\n    port_id = $3\n    AND port_dock_point_id = $4\n            "
  },
  "9cd1c5dcb3702c1f36ba3a3a869ad3a36010357f2ddf7576635224b2c2bae6c6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "DateArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_arrivals (\n        message_id,\n        message_number,\n        message_timestamp,\n        ers_message_type_id,\n        message_year,\n        relevant_year,\n        sequence_number,\n        arrival_timestamp,\n        landing_facility,\n        port_id,\n        fiskeridir_vessel_id,\n        vessel_building_year,\n        vessel_call_sign,\n        vessel_call_sign_ers,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_county,\n        vessel_county_code,\n        vessel_greatest_length,\n        vessel_identification,\n        vessel_length,\n        vessel_length_group,\n        vessel_length_group_code,\n        vessel_material_code,\n        vessel_municipality,\n        vessel_municipality_code,\n        vessel_name,\n        vessel_name_ers,\n        vessel_nationality_code,\n        fiskeridir_vessel_nationality_group_id,\n        vessel_rebuilding_year,\n        vessel_registration_id,\n        vessel_registration_id_ers,\n        vessel_valid_until,\n        vessel_width\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::timestamptz[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::timestamptz[],\n        $9::VARCHAR[],\n        $10::VARCHAR[],\n        $11::INT[],\n        $12::INT[],\n        $13::VARCHAR[],\n        $14::VARCHAR[],\n        $15::INT[],\n        $16::INT[],\n        $17::INT[],\n        $18::INT[],\n        $19::VARCHAR[],\n        $20::INT[],\n        $21::DECIMAL[],\n        $22::VARCHAR[],\n        $23::DECIMAL[],\n        $24::VARCHAR[],\n        $25::INT[],\n        $26::VARCHAR[],\n        $27::VARCHAR[],\n        $28::INT[],\n        $29::VARCHAR[],\n        $30::VARCHAR[],\n        $31::VARCHAR[],\n        $32::INT[],\n        $33::INT[],\n        $34::VARCHAR[],\n        $35::VARCHAR[],\n        $36::date[],\n        $37::DECIMAL[]\n    )\nON CONFLICT (message_id) DO NOTHING\n            "
  },
  "9f9b965dc448ce53a78ad20637e40bc3b24dbcd6abc5a8bbede22343d08da84e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "NumericArray",
          "TimestamptzArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_positions (\n        mmsi,\n        latitude,\n        longitude,\n        course_over_ground,\n        rate_of_turn,\n        true_heading,\n        speed_over_ground,\n        TIMESTAMP,\n        altitude,\n        distance_to_shore,\n        ais_class,\n        ais_message_type_id,\n        navigation_status_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::INT[],\n        $2::DECIMAL[],\n        $3::DECIMAL[],\n        $4::DECIMAL[],\n        $5::DECIMAL[],\n        $6::INT[],\n        $7::DECIMAL[],\n        $8::timestamptz[],\n        $9::INT[],\n        $10::DECIMAL[],\n        $11::VARCHAR[],\n        $12::INT[],\n        $13::INT[]\n    )\nON CONFLICT (mmsi, TIMESTAMP) DO NOTHING\n            "
  },
  "a0a6a2eba021d36aa27c13900ff7655b64d5a9ae9c4f5b45f3abbe9fb5fc1eee": {
    "describe": {
      "columns": [
        {
          "name": "start",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "end",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nWITH\n    q1 AS (\n        SELECT\n            JSONB_AGG(\n                JSON_BUILD_OBJECT(\n                    'port_id',\n                    pd.port_id,\n                    'port_dock_point_id',\n                    pd.port_dock_point_id,\n                    'latitude',\n                    pd.latitude,\n                    'longitude',\n                    pd.longitude,\n                    'name',\n                    pd.name\n                )\n            ) AS \"start\"\n        FROM\n            trips AS t\n            INNER JOIN ports AS p ON t.start_port_id = p.port_id\n            INNER JOIN port_dock_points AS pd ON pd.port_id = p.port_id\n        WHERE\n            trip_id = $1\n    ),\n    q2 AS (\n        SELECT\n            JSONB_AGG(\n                JSON_BUILD_OBJECT(\n                    'port_id',\n                    pd.port_id,\n                    'port_dock_point_id',\n                    pd.port_dock_point_id,\n                    'latitude',\n                    pd.latitude,\n                    'longitude',\n                    pd.longitude,\n                    'name',\n                    pd.name\n                )\n            ) AS \"end\"\n        FROM\n            trips AS t\n            INNER JOIN ports AS p ON t.end_port_id = p.port_id\n            INNER JOIN port_dock_points AS pd ON pd.port_id = p.port_id\n        WHERE\n            trip_id = $1\n    )\nSELECT\n    \"start\"::TEXT,\n    \"end\"::TEXT\nFROM\n    q1\n    CROSS JOIN q2;\n            "
  },
  "a5b6211258ba0255c52615db5f46f0bbac5a11652424e090120e048c661c361b": {
    "describe": {
      "columns": [
        {
          "name": "last_changed",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    last_changed\nFROM\n    fishing_facilities\nWHERE\n    (\n        $1::INT IS NULL\n        OR api_source = $1\n    )\nORDER BY\n    last_changed DESC\nLIMIT\n    1\n            "
  },
  "a8218e229eee65b73b629e222cafaa09f7df5ae10e322f9d58e7f23d0b228c7f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    species_fao (species_fao_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (species_fao_id) DO\nUPDATE\nSET\n    \"name\" = COALESCE(species_fao.name, EXCLUDED.name)\n            "
  },
  "af78b64d395c78a553f920fc8b726f0c4d62e286d2823a1554d43e626d97949d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "Int8Array",
          "Int8Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "DateArray",
          "TimestamptzArray",
          "TimestamptzArray",
          "TimeArray",
          "Int4Array",
          "Int4Array",
          "DateArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "BoolArray",
          "VarcharArray",
          "VarcharArray",
          "TimestamptzArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    landings (\n        landing_id,\n        document_id,\n        fiskeridir_vessel_id,\n        fiskeridir_vessel_type_id,\n        vessel_call_sign,\n        vessel_registration_id,\n        vessel_length_group_id,\n        vessel_nation_group_id,\n        vessel_nation_id,\n        vessel_norwegian_municipality_id,\n        vessel_norwegian_county_id,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_name,\n        vessel_length,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_building_year,\n        vessel_rebuilding_year,\n        gear_id,\n        gear_group_id,\n        gear_main_group_id,\n        document_type_id,\n        sales_team_id,\n        sales_team_tax,\n        delivery_point_id,\n        document_sale_date,\n        document_version_date,\n        landing_timestamp,\n        landing_time,\n        landing_month_id,\n        \"version\",\n        last_catch_date,\n        num_crew_members,\n        fisher_org_id,\n        fisher_nation_id,\n        fisher_municipality_id,\n        catch_field,\n        catch_area_id,\n        catch_main_area_id,\n        catch_main_area_fao_id,\n        area_grouping_id,\n        delivery_point_municipality_id,\n        landing_norwegian_county_id,\n        landing_nation_id,\n        north_south_62_degrees_id,\n        within_12_mile_border,\n        fishing_diary_number,\n        fishing_diary_trip_number,\n        economic_zone_id,\n        partial_landing,\n        partial_landing_next_delivery_point_id,\n        partial_landing_previous_delivery_point_id,\n        data_update_timestamp,\n        catch_year,\n        production_facility,\n        production_facility_municipality_id,\n        product_quality_id,\n        quota_type_id,\n        quota_vessel_registration_id,\n        buyer_org_id,\n        buyer_nation_id,\n        receiving_vessel_registration_id,\n        receiving_vessel_mmsi_or_call_sign,\n        receiving_vessel_type,\n        receiving_vessel_nation_id,\n        receiving_vessel_nation,\n        data_year\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::VARCHAR[],\n        $2::BIGINT[],\n        $3::BIGINT[],\n        $4::INT[],\n        $5::VARCHAR[],\n        $6::VARCHAR[],\n        $7::INT[],\n        $8::VARCHAR[],\n        $9::VARCHAR[],\n        $10::INT[],\n        $11::INT[],\n        $12::INT[],\n        $13::INT[],\n        $14::VARCHAR[],\n        $15::DECIMAL[],\n        $16::INT[],\n        $17::INT[],\n        $18::INT[],\n        $19::INT[],\n        $20::INT[],\n        $21::INT[],\n        $22::INT[],\n        $23::INT[],\n        $24::INT[],\n        $25::DECIMAL[],\n        $26::VARCHAR[],\n        $27::date[],\n        $28::timestamptz[],\n        $29::timestamptz[],\n        $30::TIME[],\n        $31::INT[],\n        $32::INT[],\n        $33::date[],\n        $34::INT[],\n        $35::INT[],\n        $36::VARCHAR[],\n        $37::INT[],\n        $38::VARCHAR[],\n        $39::INT[],\n        $40::INT[],\n        $41::INT[],\n        $42::VARCHAR[],\n        $43::INT[],\n        $44::INT[],\n        $45::VARCHAR[],\n        $46::VARCHAR[],\n        $47::INT[],\n        $48::INT[],\n        $49::INT[],\n        $50::VARCHAR[],\n        $51::BOOLEAN[],\n        $52::VARCHAR[],\n        $53::VARCHAR[],\n        $54::timestamptz[],\n        $55::INT[],\n        $56::VARCHAR[],\n        $57::INT[],\n        $58::INT[],\n        $59::INT[],\n        $60::VARCHAR[],\n        $61::INT[],\n        $62::VARCHAR[],\n        $63::VARCHAR[],\n        $64::VARCHAR[],\n        $65::INT[],\n        $66::VARCHAR[],\n        $67::VARCHAR[],\n        $68::INT[]\n    )\nON CONFLICT (landing_id) DO NOTHING\n            "
  },
  "afab8a5cb3418938aa30de7bd22a9852b1b204e39858a3194974a12c5e61100c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    norwegian_counties (norwegian_county_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (norwegian_county_id) DO NOTHING\n            "
  },
  "b3685c809d3d899facde5172e3b550f30d18a601bd53b562919042982b499b38": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    vessel_benchmark_outputs (fiskeridir_vessel_id, vessel_benchmark_id, output)\nSELECT\n    *\nFROM\n    UNNEST($1::BIGINT[], $2::INT[], $3::DECIMAL[])\nON CONFLICT (fiskeridir_vessel_id, vessel_benchmark_id) DO\nUPDATE\nSET\n    output = excluded.output\n            "
  },
  "b5c70e436f13acf05bb30230a566a489385309a1751f5bdcfd4090101fd7e3b7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray",
          "NumericArray",
          "NumericArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    catch_main_areas (catch_main_area_id, \"name\", latitude, longitude)\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::INT[],\n        $2::VARCHAR[],\n        $3::DECIMAL[],\n        $4::DECIMAL[]\n    )\nON CONFLICT (catch_main_area_id) DO\nUPDATE\nSET\n    \"name\" = CASE\n        WHEN catch_main_areas.name IS NULL THEN excluded.name\n    END,\n    latitude = excluded.latitude,\n    longitude = excluded.longitude\nWHERE\n    catch_main_areas.latitude IS NULL\n    AND catch_main_areas.longitude IS NULL\n                "
  },
  "b73232f832f90bad7cc3d4ad435e1f329749e36c18f1ffeece363188dc10bbb7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TstzRangeArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nUPDATE trips\nSET\n    period_precision = u.period_precision,\n    trip_precision_status_id = u.precision_status,\n    start_precision_id = u.start_precision_id,\n    end_precision_id = u.end_precision_id,\n    start_precision_direction = u.start_precision_direction,\n    end_precision_direction = u.end_precision_direction\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::tstzrange[],\n        $3::VARCHAR[],\n        $4::INT[],\n        $5::INT[],\n        $6::VARCHAR[],\n        $7::VARCHAR[]\n    ) u (\n        trip_id,\n        period_precision,\n        precision_status,\n        start_precision_id,\n        end_precision_id,\n        start_precision_direction,\n        end_precision_direction\n    )\nWHERE\n    trips.trip_id = u.trip_id\n            "
  },
  "b8ca541d7429736190d49345b7c3641bff6d0a9a749dc1a6fe4afeaeacc4a918": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_id",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 4,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "start_port_id",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "end_port_id",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "total_gross_weight!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "total_living_weight!",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "total_product_weight!",
          "ordinal": 10,
          "type_info": "Numeric"
        },
        {
          "name": "num_deliveries!",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "gear_ids!: Vec<Gear>",
          "ordinal": 12,
          "type_info": "Int4Array"
        },
        {
          "name": "delivery_points!",
          "ordinal": 13,
          "type_info": "VarcharArray"
        },
        {
          "name": "latest_landing_timestamp",
          "ordinal": 14,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_events!",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "hauls!",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "fishing_facilities!",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "catches!",
          "ordinal": 18,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bool"
        ]
      }
    },
    "query": "\nWITH\n    trip_ids AS (\n        SELECT\n            t.trip_id\n        FROM\n            hauls h\n            RIGHT JOIN vessel_events v ON v.vessel_event_id = h.vessel_event_id\n            RIGHT JOIN trips t ON t.trip_id = v.trip_id\n        WHERE\n            haul_id = $1\n    ),\n    everything AS (\n        SELECT\n            t.trip_id AS t_trip_id,\n            t.fiskeridir_vessel_id AS t_fiskeridir_vessel_id,\n            t.period AS t_period,\n            t.period_precision AS t_period_precision,\n            t.landing_coverage AS t_landing_coverage,\n            t.trip_assembler_id AS t_trip_assembler_id,\n            t.start_port_id AS t_start_port_id,\n            t.end_port_id AS t_end_port_id,\n            v.vessel_event_id AS v_vessel_event_id,\n            v.fiskeridir_vessel_id AS v_fiskeridir_vessel_id,\n            v.timestamp AS v_timestamp,\n            v.vessel_event_type_id AS v_vessel_event_type_id,\n            l.landing_id AS l_landing_id,\n            l.landing_timestamp AS l_landing_timestamp,\n            l.gear_id AS l_gear_id,\n            l.product_quality_id AS l_product_quality_id,\n            l.delivery_point_id AS l_delivery_point_id,\n            le.gross_weight AS le_gross_weight,\n            le.living_weight AS le_living_weight,\n            le.product_weight AS le_product_weight,\n            le.species_fiskeridir_id AS le_species_fiskeridir_id,\n            h.haul_id AS h_haul_id,\n            h.ers_activity_id AS h_ers_activity_id,\n            h.duration AS h_duration,\n            h.haul_distance AS h_haul_distance,\n            h.catch_location_start AS h_catch_location_start,\n            h.catch_locations AS h_catch_locations,\n            h.ocean_depth_end AS h_ocean_depth_end,\n            h.ocean_depth_start AS h_ocean_depth_start,\n            h.quota_type_id AS h_quota_type_id,\n            h.start_latitude AS h_start_latitude,\n            h.start_longitude AS h_start_longitude,\n            h.start_timestamp AS h_start_timestamp,\n            h.stop_timestamp AS h_stop_timestamp,\n            h.stop_latitude AS h_stop_latitude,\n            h.stop_longitude AS h_stop_longitude,\n            h.gear_id AS h_gear_id,\n            h.gear_group_id AS h_gear_group_id,\n            h.fiskeridir_vessel_id AS h_fiskeridir_vessel_id,\n            h.vessel_call_sign AS h_vessel_call_sign,\n            h.vessel_call_sign_ers AS h_vessel_call_sign_ers,\n            h.vessel_length AS h_vessel_length,\n            h.vessel_length_group AS h_vessel_length_group,\n            h.vessel_name AS h_vessel_name,\n            h.vessel_name_ers AS h_vessel_name_ers,\n            h.catches AS h_catches,\n            h.whale_catches AS h_whale_catches,\n            f.tool_id AS f_tool_id,\n            f.barentswatch_vessel_id AS f_barentswatch_vessel_id,\n            f.fiskeridir_vessel_id AS f_fiskeridir_vessel_id,\n            f.vessel_name AS f_vessel_name,\n            f.call_sign AS f_call_sign,\n            f.mmsi AS f_mmsi,\n            f.imo AS f_imo,\n            f.reg_num AS f_reg_num,\n            f.sbr_reg_num AS f_sbr_reg_num,\n            f.contact_phone AS f_contact_phone,\n            f.contact_email AS f_contact_email,\n            f.tool_type AS f_tool_type,\n            f.tool_type_name AS f_tool_type_name,\n            f.tool_color AS f_tool_color,\n            f.tool_count AS f_tool_count,\n            f.setup_timestamp AS f_setup_timestamp,\n            f.setup_processed_timestamp AS f_setup_processed_timestamp,\n            f.removed_timestamp AS f_removed_timestamp,\n            f.removed_processed_timestamp AS f_removed_processed_timestamp,\n            f.last_changed AS f_last_changed,\n            f.source AS f_source,\n            f.comment AS f_comment,\n            f.geometry_wkt AS f_geometry_wkt,\n            f.api_source AS f_api_source\n        FROM\n            trips t\n            INNER JOIN trip_ids ti ON t.trip_id = ti.trip_id\n            LEFT JOIN vessel_events v ON t.trip_id = v.trip_id\n            LEFT JOIN landings l ON l.vessel_event_id = v.vessel_event_id\n            LEFT JOIN landing_entries le ON l.landing_id = le.landing_id\n            LEFT JOIN hauls h ON h.vessel_event_id = v.vessel_event_id\n            LEFT JOIN fishing_facilities f ON $2\n            AND f.fiskeridir_vessel_id = t.fiskeridir_vessel_id\n            AND f.period && t.period\n    )\nSELECT\n    q1.t_trip_id AS trip_id,\n    t_fiskeridir_vessel_id AS fiskeridir_vessel_id,\n    t_period AS period,\n    t_period_precision AS period_precision,\n    t_landing_coverage AS landing_coverage,\n    t_trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\",\n    t_start_port_id AS start_port_id,\n    t_end_port_id AS end_port_id,\n    total_gross_weight AS \"total_gross_weight!\",\n    total_living_weight AS \"total_living_weight!\",\n    total_product_weight AS \"total_product_weight!\",\n    num_deliveries AS \"num_deliveries!\",\n    gear_ids AS \"gear_ids!: Vec<Gear>\",\n    delivery_points AS \"delivery_points!\",\n    latest_landing_timestamp,\n    vessel_events::TEXT AS \"vessel_events!\",\n    hauls::TEXT AS \"hauls!\",\n    fishing_facilities::TEXT AS \"fishing_facilities!\",\n    COALESCE(catches, '[]')::TEXT AS \"catches!\"\nFROM\n    (\n        SELECT\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id,\n            COALESCE(SUM(le_gross_weight), 0) AS total_gross_weight,\n            COALESCE(SUM(le_living_weight), 0) AS total_living_weight,\n            COALESCE(SUM(le_product_weight), 0) AS total_product_weight,\n            COUNT(DISTINCT l_landing_id) AS num_deliveries,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_gear_id), NULL) AS gear_ids,\n            ARRAY_REMOVE(ARRAY_AGG(DISTINCT l_delivery_point_id), NULL) AS delivery_points,\n            MAX(l_landing_timestamp) AS latest_landing_timestamp,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'vessel_event_id',\n                        v_vessel_event_id,\n                        'fiskeridir_vessel_id',\n                        v_fiskeridir_vessel_id,\n                        'timestamp',\n                        v_timestamp,\n                        'vessel_event_type_id',\n                        v_vessel_event_type_id\n                    )\n                    ORDER BY\n                        v_timestamp\n                ),\n                '[]'\n            ) AS vessel_events,\n            COALESCE(\n                JSONB_AGG(\n                    JSONB_BUILD_OBJECT(\n                        'haul_id',\n                        h_haul_id,\n                        'ers_activity_id',\n                        h_ers_activity_id,\n                        'duration',\n                        h_duration,\n                        'haul_distance',\n                        h_haul_distance,\n                        'catch_location_start',\n                        h_catch_location_start,\n                        'catch_locations',\n                        h_catch_locations,\n                        'ocean_depth_end',\n                        h_ocean_depth_end,\n                        'ocean_depth_start',\n                        h_ocean_depth_start,\n                        'quota_type_id',\n                        h_quota_type_id,\n                        'start_latitude',\n                        h_start_latitude,\n                        'start_longitude',\n                        h_start_longitude,\n                        'start_timestamp',\n                        h_start_timestamp,\n                        'stop_timestamp',\n                        h_stop_timestamp,\n                        'stop_latitude',\n                        h_stop_latitude,\n                        'stop_longitude',\n                        h_stop_longitude,\n                        'gear_id',\n                        h_gear_id,\n                        'gear_group_id',\n                        h_gear_group_id,\n                        'fiskeridir_vessel_id',\n                        h_fiskeridir_vessel_id,\n                        'vessel_call_sign',\n                        h_vessel_call_sign,\n                        'vessel_call_sign_ers',\n                        h_vessel_call_sign_ers,\n                        'vessel_length',\n                        h_vessel_length,\n                        'vessel_length_group',\n                        h_vessel_length_group,\n                        'vessel_name',\n                        h_vessel_name,\n                        'vessel_name_ers',\n                        h_vessel_name_ers,\n                        'catches',\n                        h_catches,\n                        'whale_catches',\n                        h_whale_catches\n                    )\n                ) FILTER (\n                    WHERE\n                        h_haul_id IS NOT NULL\n                ),\n                '[]'\n            ) AS hauls,\n            COALESCE(\n                JSONB_AGG(\n                    DISTINCT JSONB_BUILD_OBJECT(\n                        'tool_id',\n                        f_tool_id,\n                        'barentswatch_vessel_id',\n                        f_barentswatch_vessel_id,\n                        'fiskeridir_vessel_id',\n                        f_fiskeridir_vessel_id,\n                        'vessel_name',\n                        f_vessel_name,\n                        'call_sign',\n                        f_call_sign,\n                        'mmsi',\n                        f_mmsi,\n                        'imo',\n                        f_imo,\n                        'reg_num',\n                        f_reg_num,\n                        'sbr_reg_num',\n                        f_sbr_reg_num,\n                        'contact_phone',\n                        f_contact_phone,\n                        'contact_email',\n                        f_contact_email,\n                        'tool_type',\n                        f_tool_type,\n                        'tool_type_name',\n                        f_tool_type_name,\n                        'tool_color',\n                        f_tool_color,\n                        'tool_count',\n                        f_tool_count,\n                        'setup_timestamp',\n                        f_setup_timestamp,\n                        'setup_processed_timestamp',\n                        f_setup_processed_timestamp,\n                        'removed_timestamp',\n                        f_removed_timestamp,\n                        'removed_processed_timestamp',\n                        f_removed_processed_timestamp,\n                        'last_changed',\n                        f_last_changed,\n                        'source',\n                        f_source,\n                        'comment',\n                        f_comment,\n                        'geometry_wkt',\n                        ST_ASTEXT (f_geometry_wkt),\n                        'api_source',\n                        f_api_source\n                    )\n                ) FILTER (\n                    WHERE\n                        f_tool_id IS NOT NULL\n                ),\n                '[]'\n            ) AS fishing_facilities\n        FROM\n            everything\n        GROUP BY\n            t_trip_id,\n            t_fiskeridir_vessel_id,\n            t_period,\n            t_period_precision,\n            t_landing_coverage,\n            t_trip_assembler_id,\n            t_start_port_id,\n            t_end_port_id\n    ) q1\n    LEFT JOIN (\n        SELECT\n            qi.t_trip_id,\n            JSONB_AGG(qi.catches) AS catches\n        FROM\n            (\n                SELECT\n                    t_trip_id,\n                    JSONB_BUILD_OBJECT(\n                        'living_weight',\n                        SUM(le_living_weight),\n                        'gross_weight',\n                        SUM(le_gross_weight),\n                        'product_weight',\n                        SUM(le_product_weight),\n                        'species_fiskeridir_id',\n                        le_species_fiskeridir_id,\n                        'product_quality_id',\n                        l_product_quality_id\n                    ) AS catches\n                FROM\n                    everything\n                WHERE\n                    l_product_quality_id IS NOT NULL\n                    AND le_species_fiskeridir_id IS NOT NULL\n                GROUP BY\n                    t_trip_id,\n                    l_product_quality_id,\n                    le_species_fiskeridir_id\n            ) qi\n        GROUP BY\n            qi.t_trip_id\n    ) q2 ON q1.t_trip_id = q2.t_trip_id\n            "
  },
  "ba67f01b3b7a92db66d75c179f989855f280253c19bb4dfc6c3aeb39f18afee6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ports (port_id, \"name\", nationality)\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[], $3::VARCHAR[])\nON CONFLICT (port_id) DO NOTHING\n            "
  },
  "bff6cd57b7c80963830eb6bc6774187058373b603ee16bc61a15cd053c505f25": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_message_types (ers_message_type_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (ers_message_type_id) DO NOTHING\n            "
  },
  "c0c6c9be48bbffa926b4f15fbee86e5eda7c08745fb01f5e926df92835910c93": {
    "describe": {
      "columns": [
        {
          "name": "call_sign",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "course",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "latitude",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "longitude",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "registration_id",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "speed",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "timestamp",
          "ordinal": 6,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_length",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "vessel_name",
          "ordinal": 8,
          "type_info": "Varchar"
        },
        {
          "name": "vessel_type",
          "ordinal": 9,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    call_sign,\n    course,\n    latitude,\n    longitude,\n    registration_id,\n    speed,\n    \"timestamp\",\n    vessel_length,\n    vessel_name,\n    vessel_type\nFROM\n    vms_positions\nWHERE\n    message_id = $1\n            "
  },
  "c0c83acf12895ec7a8efd6e1becf34b5820cfffe94fdfb1f7352596a88b91cd9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nDELETE FROM ers_arrivals e\nWHERE\n    e.relevant_year = $1\n            "
  },
  "c1133ee8fd33134dfe41ca538a51db2595ad5ea910ad913dc106db5735d21fc9": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 1,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\nSELECT\n    trip_id,\n    period,\n    period_precision,\n    landing_coverage,\n    trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\"\nFROM\n    trips\nWHERE\n    fiskeridir_vessel_id = $1\n            "
  },
  "c276a04cd91093f95e544c707cb73ee8212d1f909395d2e47bb231f11ba7940d": {
    "describe": {
      "columns": [
        {
          "name": "trip_id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "period",
          "ordinal": 1,
          "type_info": "TstzRange"
        },
        {
          "name": "period_precision",
          "ordinal": 2,
          "type_info": "TstzRange"
        },
        {
          "name": "landing_coverage",
          "ordinal": 3,
          "type_info": "TstzRange"
        },
        {
          "name": "trip_assembler_id!: TripAssemblerId",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    trip_id,\n    period,\n    period_precision,\n    landing_coverage,\n    trip_assembler_id AS \"trip_assembler_id!: TripAssemblerId\"\nFROM\n    trips\nWHERE\n    fiskeridir_vessel_id = $1\n    AND UPPER(period) < $2\nORDER BY\n    period DESC\nLIMIT\n    1\n            "
  },
  "c2d5d3e9e36a67b427e908c30605302572289c40a292bb1422e0097384a8c62a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    gear_fao (gear_fao_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (gear_fao_id) DO\nUPDATE\nSET\n    \"name\" = CASE\n        WHEN gear_fao.name IS NULL THEN excluded.name\n    END\n            "
  },
  "c32f08d81089cdb4b8ee4ecb9f3bd913005585419a0494ae87701eda034659d7": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "name?",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    species_fao_id AS id,\n    \"name\" AS \"name?\"\nFROM\n    species_fao\n            "
  },
  "c3712a0c2bb2d1e9e4da2c0cc9afe7fc4592d40fa6e1faa0549d75331c8f3790": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "name?",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    species_fiskeridir_id AS id,\n    \"name\" AS \"name?\"\nFROM\n    species_fiskeridir\nORDER BY\n    species_fiskeridir_id\n            "
  },
  "c37788fb49da61d2607dd1c96f5c29b0404ccf531432bd1c9473546a2c2652a3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TstzRangeArray",
          "TstzRangeArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int8Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    trips (\n        period,\n        landing_coverage,\n        start_port_id,\n        end_port_id,\n        trip_assembler_id,\n        fiskeridir_vessel_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::tstzrange[],\n        $2::tstzrange[],\n        $3::VARCHAR[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::BIGINT[]\n    )\n            "
  },
  "c6e3ea79c2b6926f205c3e934af7816b626594cad96a667e02776e761feee0c4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Numeric",
          "Numeric",
          "Text"
        ]
      }
    },
    "query": "\nUPDATE ports\nSET\n    latitude = $1,\n    longitude = $2\nWHERE\n    port_id = $3\n            "
  },
  "ca28c3d988c1b915c8f1596bb7189b3467cd016e3536342d2e2c8b0e83473da9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    economic_zones (economic_zone_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (economic_zone_id) DO NOTHING\n            "
  },
  "ca3756b080b784f708bf2b7d8f6bdffb2566f15aee96c69b40bd04a29cd2fa32": {
    "describe": {
      "columns": [
        {
          "name": "add_vms_position_partitions",
          "ordinal": 0,
          "type_info": "Void"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\nSELECT\n    add_vms_position_partitions ($1)\n            "
  },
  "cc7529bb4ecd6aa70d015d86abc5efdbb2cca25ed8019b40dbb30e76ad745e65": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "VarcharArray",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    herring_populations (herring_population_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::VARCHAR[], $2::VARCHAR[])\nON CONFLICT (herring_population_id) DO NOTHING\n            "
  },
  "cc9a3239134095f79a6215884bf01f45ecac983ec52a62c4e06a0cc0f8e089ea": {
    "describe": {
      "columns": [
        {
          "name": "output",
          "ordinal": 0,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4"
        ]
      }
    },
    "query": "\nSELECT\n    output\nFROM\n    vessel_benchmark_outputs\nWHERE\n    fiskeridir_vessel_id = $1\n    AND vessel_benchmark_id = $2\n            "
  },
  "cfc421b188cca6947cfe3156ad0b250768f1fcb055ff578f9e37738b4b3aa629": {
    "describe": {
      "columns": [
        {
          "name": "vessel_event_id!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "fiskeridir_vessel_id!",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "timestamp!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "vessel_event_type_id!: VesselEventType",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "port_id",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "arrival_port_id",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "departure_port_id",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "estimated_timestamp",
          "ordinal": 7,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "TstzRange"
        ]
      }
    },
    "query": "\nSELECT\n    vessel_event_id AS \"vessel_event_id!\",\n    fiskeridir_vessel_id AS \"fiskeridir_vessel_id!\",\n    \"timestamp\" AS \"timestamp!\",\n    \"vessel_event_type_id!: VesselEventType\",\n    port_id,\n    NULL AS \"arrival_port_id\",\n    NULL AS \"departure_port_id\",\n    estimated_timestamp\nFROM\n    (\n        SELECT\n            v.vessel_event_id,\n            v.fiskeridir_vessel_id,\n            v.\"timestamp\",\n            v.vessel_event_type_id AS \"vessel_event_type_id!: VesselEventType\",\n            d.port_id,\n            d.relevant_year,\n            d.message_number,\n            d.departure_timestamp AS estimated_timestamp\n        FROM\n            vessel_events v\n            INNER JOIN ers_departures d ON d.vessel_event_id = v.vessel_event_id\n        WHERE\n            v.fiskeridir_vessel_id = $1\n            AND v.\"timestamp\" <@ $2::tstzrange\n            AND v.\"timestamp\" >= '1970-01-01T00:00:00Z'::TIMESTAMPTZ\n        UNION\n        SELECT\n            v.vessel_event_id,\n            v.fiskeridir_vessel_id,\n            v.\"timestamp\",\n            v.vessel_event_type_id AS \"vessel_event_type_id!: VesselEventType\",\n            a.port_id,\n            a.relevant_year,\n            a.message_number,\n            a.arrival_timestamp AS estimated_timestamp\n        FROM\n            vessel_events v\n            INNER JOIN ers_arrivals a ON a.vessel_event_id = v.vessel_event_id\n        WHERE\n            v.fiskeridir_vessel_id = $1\n            AND v.\"timestamp\" <@ $2::tstzrange\n            AND v.\"timestamp\" >= '1970-01-01T00:00:00Z'::TIMESTAMPTZ\n    ) q\nORDER BY\n    \"timestamp\",\n    message_number\n           "
  },
  "d0c8da7556d649bfbc5a8b244de00c5edb08890dfc379e165610071580eabc71": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TimestamptzArray",
          "TimestamptzArray",
          "TextArray"
        ]
      }
    },
    "query": "\nUPDATE hauls h\nSET\n    catch_locations = q.catch_locations\nFROM\n    (\n        SELECT\n            u.message_id,\n            u.start_timestamp,\n            u.stop_timestamp,\n            ARRAY_AGG(DISTINCT u.catch_location) AS catch_locations\n        FROM\n            UNNEST(\n                $1::BIGINT[],\n                $2::TIMESTAMPTZ[],\n                $3::TIMESTAMPTZ[],\n                $4::TEXT[]\n            ) u (\n                message_id,\n                start_timestamp,\n                stop_timestamp,\n                catch_location\n            )\n        GROUP BY\n            u.message_id,\n            u.start_timestamp,\n            u.stop_timestamp\n    ) q\nWHERE\n    h.message_id = q.message_id\n    AND h.start_timestamp = q.start_timestamp\n    AND h.stop_timestamp = q.stop_timestamp\n            "
  },
  "d0f5a1120264b570bd35e961a8e8650bac90a07b3ef7f3e9acbf6a59e99f169c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TstzRangeArray",
          "Int8",
          "Int4"
        ]
      }
    },
    "query": "\nDELETE FROM trips\nWHERE\n    period && ANY ($1)\n    AND fiskeridir_vessel_id = $2\n    AND trip_assembler_id = $3\n            "
  },
  "d1aa1ba13ded870125bd254ccb84850995fd48db341ca8a6680f1af0a64ec030": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_arrival_catches (\n        message_id,\n        ers_quantum_type_id,\n        living_weight,\n        species_fao_id,\n        species_fiskeridir_id,\n        species_group_id,\n        species_main_group_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::VARCHAR[],\n        $3::INT[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[]\n    )\n            "
  },
  "d52da252e39a219e038bf4ede6dc7b3e0df80c71b4a316be3487c37c5795c554": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    gear_problems (gear_problem_id, \"name\")\nSELECT\n    *\nFROM\n    UNNEST($1::INT[], $2::VARCHAR[])\nON CONFLICT (gear_problem_id) DO\nUPDATE\nSET\n    \"name\" = CASE\n        WHEN gear_problems.name IS NULL THEN excluded.name\n    END\n            "
  },
  "d684798f88d39e4ae5faf94070310ae1697eaac8f258e0ce0dbe93603ce8ccb4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "TimestamptzArray",
          "TimestamptzArray",
          "TextArray",
          "NumericArray",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    hauls_matrix (\n        message_id,\n        start_timestamp,\n        stop_timestamp,\n        catch_location_matrix_index,\n        catch_location,\n        matrix_month_bucket,\n        vessel_length_group,\n        fiskeridir_vessel_id,\n        gear_group_id,\n        species_group_id,\n        living_weight,\n        haul_distributor_id\n    )\nSELECT\n    e.message_id,\n    e.start_timestamp,\n    e.stop_timestamp,\n    l.matrix_index,\n    l.catch_location_id,\n    HAULS_MATRIX_MONTH_BUCKET (e.start_timestamp),\n    TO_VESSEL_LENGTH_GROUP (e.vessel_length),\n    e.fiskeridir_vessel_id,\n    e.gear_group_id,\n    c.species_group_id,\n    SUM(c.living_weight) * MIN(u.factor),\n    MIN(u.haul_distributor_id)\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::TIMESTAMPTZ[],\n        $3::TIMESTAMPTZ[],\n        $4::TEXT[],\n        $5::DECIMAL[],\n        $6::INT[]\n    ) u (\n        message_id,\n        start_timestamp,\n        stop_timestamp,\n        catch_location,\n        factor,\n        haul_distributor_id\n    )\n    INNER JOIN ers_dca e ON e.message_id = u.message_id\n    AND e.start_timestamp = u.start_timestamp\n    AND e.stop_timestamp = u.stop_timestamp\n    INNER JOIN ers_dca_catches c ON e.message_id = c.message_id\n    AND e.start_timestamp = c.start_timestamp\n    AND e.stop_timestamp = c.stop_timestamp\n    INNER JOIN catch_locations l ON u.catch_location = l.catch_location_id\nGROUP BY\n    e.message_id,\n    e.start_timestamp,\n    e.stop_timestamp,\n    c.species_group_id,\n    l.catch_location_id\n            "
  },
  "dcd255dc94a1f21697504bc18af844a01e9c4fe801be89543e9e7cbc97df1884": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "TimestamptzArray",
          "Int4Array",
          "VarcharArray"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_vessels (\n        mmsi,\n        imo_number,\n        call_sign,\n        NAME,\n        ship_width,\n        ship_length,\n        ship_type,\n        eta,\n        draught,\n        destination\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::INT[],\n        $2::INT[],\n        $3::VARCHAR[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::timestamptz[],\n        $9::INT[],\n        $10::VARCHAR[]\n    )\nON CONFLICT (mmsi) DO\nUPDATE\nSET\n    imo_number = excluded.imo_number,\n    call_sign = excluded.call_sign,\n    NAME = excluded.name,\n    ship_width = excluded.ship_width,\n    ship_length = excluded.ship_length,\n    ship_type = excluded.ship_type,\n    eta = excluded.eta,\n    draught = excluded.draught,\n    destination = excluded.destination\n            "
  },
  "dda4aab610c2898da4d0473ac63726be8e242447ecd5f5b35edc45f7e620ad7b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array",
          "Int4Array",
          "TimestamptzArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "NumericArray",
          "NumericArray",
          "TimestamptzArray",
          "NumericArray",
          "NumericArray",
          "TimestamptzArray",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "NumericArray",
          "VarcharArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "VarcharArray",
          "DateArray",
          "NumericArray",
          "VarcharArray",
          "Int4Array"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ers_dca (\n        message_id,\n        message_number,\n        message_timestamp,\n        ers_message_type_id,\n        message_year,\n        relevant_year,\n        sequence_number,\n        message_version,\n        ers_activity_id,\n        area_grouping_end_id,\n        area_grouping_start_id,\n        call_sign_of_loading_vessel,\n        catch_year,\n        duration,\n        economic_zone_id,\n        haul_distance,\n        herring_population_id,\n        herring_population_fiskeridir_id,\n        location_end_code,\n        location_start_code,\n        main_area_end_id,\n        main_area_start_id,\n        ocean_depth_end,\n        ocean_depth_start,\n        quota_type_id,\n        start_latitude,\n        start_longitude,\n        start_timestamp,\n        stop_latitude,\n        stop_longitude,\n        stop_timestamp,\n        gear_amount,\n        gear_fao_id,\n        gear_id,\n        gear_group_id,\n        gear_main_group_id,\n        gear_mesh_width,\n        gear_problem_id,\n        gear_specification_id,\n        port_id,\n        fiskeridir_vessel_id,\n        vessel_building_year,\n        vessel_call_sign,\n        vessel_call_sign_ers,\n        vessel_engine_building_year,\n        vessel_engine_power,\n        vessel_gross_tonnage_1969,\n        vessel_gross_tonnage_other,\n        vessel_county,\n        vessel_county_code,\n        vessel_greatest_length,\n        vessel_identification,\n        vessel_length,\n        vessel_length_group,\n        vessel_length_group_code,\n        vessel_material_code,\n        vessel_municipality,\n        vessel_municipality_code,\n        vessel_name,\n        vessel_name_ers,\n        vessel_nationality_code,\n        fiskeridir_vessel_nationality_group_id,\n        vessel_rebuilding_year,\n        vessel_registration_id,\n        vessel_registration_id_ers,\n        vessel_valid_until,\n        vessel_width,\n        majority_species_fao_id,\n        majority_species_fiskeridir_id\n    )\nSELECT\n    *\nFROM\n    UNNEST(\n        $1::BIGINT[],\n        $2::INT[],\n        $3::timestamptz[],\n        $4::VARCHAR[],\n        $5::INT[],\n        $6::INT[],\n        $7::INT[],\n        $8::INT[],\n        $9::VARCHAR[],\n        $10::VARCHAR[],\n        $11::VARCHAR[],\n        $12::VARCHAR[],\n        $13::INT[],\n        $14::INT[],\n        $15::VARCHAR[],\n        $16::INT[],\n        $17::VARCHAR[],\n        $18::INT[],\n        $19::INT[],\n        $20::INT[],\n        $21::INT[],\n        $22::INT[],\n        $23::INT[],\n        $24::INT[],\n        $25::INT[],\n        $26::DECIMAL[],\n        $27::DECIMAL[],\n        $28::timestamptz[],\n        $29::DECIMAL[],\n        $30::DECIMAL[],\n        $31::timestamptz[],\n        $32::INT[],\n        $33::VARCHAR[],\n        $34::INT[],\n        $35::INT[],\n        $36::INT[],\n        $37::INT[],\n        $38::INT[],\n        $39::INT[],\n        $40::VARCHAR[],\n        $41::INT[],\n        $42::INT[],\n        $43::VARCHAR[],\n        $44::VARCHAR[],\n        $45::INT[],\n        $46::INT[],\n        $47::INT[],\n        $48::INT[],\n        $49::VARCHAR[],\n        $50::INT[],\n        $51::DECIMAL[],\n        $52::VARCHAR[],\n        $53::DECIMAL[],\n        $54::VARCHAR[],\n        $55::INT[],\n        $56::VARCHAR[],\n        $57::VARCHAR[],\n        $58::INT[],\n        $59::VARCHAR[],\n        $60::VARCHAR[],\n        $61::VARCHAR[],\n        $62::INT[],\n        $63::INT[],\n        $64::VARCHAR[],\n        $65::VARCHAR[],\n        $66::date[],\n        $67::DECIMAL[],\n        $68::VARCHAR[],\n        $69::INT[]\n    )\nON CONFLICT (message_id, start_timestamp, stop_timestamp) DO NOTHING\n            "
  },
  "ddca1bd0f4ee508c062c72f218fec496d22813659f8b650220a7df90d24b822a": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "\nINSERT INTO\n    ais_vessels (mmsi)\nVALUES\n    ($1)\nON CONFLICT (mmsi) DO NOTHING\n            "
  },
  "de0a029221d26d9be25a15064304f83230ab2e5c0bcee72fe3645ac20c32b7a4": {
    "describe": {
      "columns": [
        {
          "name": "fiskeridir_vessel_id!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Timestamptz"
        },
        {
          "name": "port_id",
          "ordinal": 2,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        true,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Timestamptz",
          "Bool"
        ]
      }
    },
    "query": "\nSELECT\n    fiskeridir_vessel_id AS \"fiskeridir_vessel_id!\",\n    arrival_timestamp AS \"timestamp\",\n    port_id\nFROM\n    ers_arrivals\nWHERE\n    fiskeridir_vessel_id = $1\n    AND arrival_timestamp >= GREATEST($2, '1970-01-01T00:00:00Z'::TIMESTAMPTZ)\n    AND (\n        $3::bool IS NULL\n        OR landing_facility IS NOT NULL\n    )\n            "
  },
  "e6606cba3ef41ddac861cdbf1930825984a508724acf033f9e54c4c708709249": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\nDELETE FROM landings\nWHERE\n    landing_id = ANY ($1)\n            "
  },
  "e81965a60a328084991ae4b58386bdcd2e29692faf4e3dfc90eced2cce805018": {
    "describe": {
      "columns": [
        {
          "name": "x_index!",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "y_index!",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "sum_living!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int4",
          "Int4Array",
          "VarcharArray",
          "Int4Array",
          "Int4Array",
          "Int4Array",
          "Int8Array"
        ]
      }
    },
    "query": "\nSELECT\n    CASE\n        WHEN $1 = 0 THEN h.matrix_month_bucket\n        WHEN $1 = 1 THEN h.gear_group_id\n        WHEN $1 = 2 THEN h.species_group_id\n        WHEN $1 = 3 THEN h.vessel_length_group\n    END AS \"x_index!\",\n    CASE\n        WHEN $2 = 0 THEN h.matrix_month_bucket\n        WHEN $2 = 1 THEN h.gear_group_id\n        WHEN $2 = 2 THEN h.species_group_id\n        WHEN $2 = 3 THEN h.vessel_length_group\n        WHEN $2 = 4 THEN h.catch_location_matrix_index\n    END AS \"y_index!\",\n    COALESCE(SUM(living_weight::BIGINT), 0)::BIGINT AS \"sum_living!\"\nFROM\n    hauls_matrix h\nWHERE\n    (\n        $1 = 0\n        OR $2 = 0\n        OR $3::INT[] IS NULL\n        OR h.matrix_month_bucket = ANY ($3)\n    )\n    AND (\n        $2 = 4\n        OR $4::VARCHAR[] IS NULL\n        OR h.catch_location = ANY ($4)\n    )\n    AND (\n        $1 = 1\n        OR $2 = 1\n        OR $5::INT[] IS NULL\n        OR h.gear_group_id = ANY ($5)\n    )\n    AND (\n        $1 = 2\n        OR $2 = 2\n        OR $6::INT[] IS NULL\n        OR h.species_group_id = ANY ($6)\n    )\n    AND (\n        $1 = 3\n        OR $2 = 3\n        OR $7::INT[] IS NULL\n        OR h.vessel_length_group = ANY ($7)\n    )\n    AND (\n        $8::BIGINT[] IS NULL\n        OR fiskeridir_vessel_id = ANY ($8)\n    )\nGROUP BY\n    1,\n    2\n            "
  },
  "e9aee1709f4c227f01ae4d9eda3e7e5028655302b9c7d0ec7db2d9937ad44436": {
    "describe": {
      "columns": [
        {
          "name": "latitude!",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "longitude!",
          "ordinal": 1,
          "type_info": "Numeric"
        },
        {
          "name": "timestamp!",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "course_over_ground",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "speed",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "navigational_status",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "rate_of_turn",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "true_heading",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "distance_to_shore",
          "ordinal": 8,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Text",
          "Timestamptz",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    latitude AS \"latitude!\",\n    longitude AS \"longitude!\",\n    \"timestamp\" AS \"timestamp!\",\n    course_over_ground,\n    speed,\n    navigational_status,\n    rate_of_turn,\n    true_heading,\n    distance_to_shore\nFROM\n    (\n        SELECT\n            latitude,\n            longitude,\n            \"timestamp\",\n            course_over_ground,\n            speed_over_ground AS speed,\n            navigation_status_id AS navigational_status,\n            rate_of_turn,\n            true_heading,\n            distance_to_shore\n        FROM\n            ais_positions a\n        WHERE\n            $1::INT IS NOT NULL\n            AND mmsi = $1\n        UNION ALL\n        SELECT\n            latitude,\n            longitude,\n            \"timestamp\",\n            course AS course_over_ground,\n            speed,\n            NULL AS navigational_status,\n            NULL AS rate_of_turn,\n            NULL AS true_heading,\n            NULL AS distance_to_shore\n        FROM\n            vms_positions v\n        WHERE\n            $2::TEXT IS NOT NULL\n            AND call_sign = $2\n    ) q\nWHERE\n    \"timestamp\" BETWEEN $3 AND $4\nORDER BY\n    \"timestamp\" ASC\n            "
  },
  "fb3aaf3ee1627012e7f1fe0386ae6c75e1320fb35f11df3de3bba049a269b1e6": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\nSELECT\n    species_id AS id,\n    \"name\"\nFROM\n    species\n            "
  },
  "fe62186142403a611afecc100fedddfe5931a1ae3a9e8b79a034006156e45955": {
    "describe": {
      "columns": [
        {
          "name": "latitude",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "longitude",
          "ordinal": 1,
          "type_info": "Numeric"
        },
        {
          "name": "mmsi",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "msgtime",
          "ordinal": 3,
          "type_info": "Timestamptz"
        },
        {
          "name": "course_over_ground",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "navigational_status",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "rate_of_turn",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "speed_over_ground",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "true_heading",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "distance_to_shore",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Timestamptz",
          "Timestamptz"
        ]
      }
    },
    "query": "\nSELECT\n    latitude,\n    longitude,\n    mmsi,\n    TIMESTAMP AS msgtime,\n    course_over_ground,\n    navigation_status_id AS navigational_status,\n    rate_of_turn,\n    speed_over_ground,\n    true_heading,\n    distance_to_shore\nFROM\n    ais_positions\nWHERE\n    mmsi = $1\n    AND TIMESTAMP BETWEEN $2 AND $3\nORDER BY\n    TIMESTAMP ASC\n            "
  }
}